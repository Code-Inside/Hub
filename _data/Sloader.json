{"Data":{"R_Blog":{"FeedItems":[{"Title":"Redirect to HTTPS with a simple web.config rule","PublishedOn":"2022-01-05T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>The scenario is easy: My website is hosted in an IIS and would like to redirect all incomming HTTP traffic to the HTTPS counterpart.</p>\n\n<p>This is your solution - a “simple” rule:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration&gt;\n    &lt;system.webServer&gt;\n        &lt;rewrite&gt;\n            &lt;rules&gt;\n                &lt;rule name=\"Redirect to https\" stopProcessing=\"true\"&gt;\n                    &lt;match url=\".*\" /&gt;\n                    &lt;conditions logicalGrouping=\"MatchAny\"&gt;\n                        &lt;add input=\"{HTTPS}\" pattern=\"off\" /&gt;\n                    &lt;/conditions&gt;\n                    &lt;action type=\"Redirect\" url=\"https://{HTTP_HOST}{REQUEST_URI}\" redirectType=\"Found\" /&gt;\n                &lt;/rule&gt;\n            &lt;/rules&gt;\n        &lt;/rewrite&gt;\n    &lt;/system.webServer&gt;\n&lt;/configuration&gt;\n</code></pre></div></div>\n\n<p>We used this in the past to setup a “catch all” web site in an IIS that redirects all incomming HTTP traffic.\nThe actual web applications had only the HTTPS binding in place.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2022/01/05/redirect-to-https-with-a-simple-webconfig-rule/","RawContent":null},{"Title":"Select random rows","PublishedOn":"2021-12-06T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Let’s say we have a SQL table and want to retrieve 10 rows randomly - how would you do that? Although I have been working with SQL for x years, I have never encountered that problem. The solution however is quite “simple” (at least if you don’t be picky how we define “randomness” and if you try this on millions of rows):</p>\n\n<h2 id=\"order-by-newid\">ORDER BY NEWID()</h2>\n\n<p>The most boring way is to use the <code class=\"language-plaintext highlighter-rouge\">ORDER BY NEWID()</code> clause:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT TOP 10 FROM Products ORDER BY NEWID()\n</code></pre></div></div>\n\n<p>This works, but if you do that on “large” datasets you might hit performance problems (e.g. more on that <a href=\"https://docs.microsoft.com/en-us/previous-versions/software-testing/cc441928(v=msdn.10)?redirectedfrom=MSDN\">here</a>)</p>\n\n<h2 id=\"tablesampe\">TABLESAMPE</h2>\n\n<p>The SQL Server implements the <code class=\"language-plaintext highlighter-rouge\">Tablesample clause</code> which was new to me. It seems to perform much bettern then the <code class=\"language-plaintext highlighter-rouge\">ORDER BY NEWID()</code> clause, but behaves a bit weird. With this clause you can specify the “sample” from a table. The size of the sample can be specified as <code class=\"language-plaintext highlighter-rouge\">PERCENT</code> or <code class=\"language-plaintext highlighter-rouge\">ROWS</code> (which are then converted to percent internally).</p>\n\n<p>Syntax:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT TOP 10 FROM Products TABLESAMPLE (25 Percent)\nSELECT TOP 10 FROM Products TABLESAMPLE (100 ROWS)\n</code></pre></div></div>\n\n<p>The weird part is that the given number might not match the number of rows of your result. You might got more or less results and if our tablesample is too small you might even got nothing in return. There are some clever ways to work around this (e.g. using the <code class=\"language-plaintext highlighter-rouge\">TOP 100</code> statement with a much larger tablesample clause to get a guaranteed result set), but it feels “strange”.\nIf you hit limitations with the first solution you might want to read more on <a href=\"https://www.mssqltips.com/sqlservertip/1308/retrieving-random-data-from-sql-server-with-tablesample/\">this blog</a> or in the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/queries/from-transact-sql?view=sql-server-ver15#tablesample-clause\">Microsoft Docs</a>.</p>\n\n<h2 id=\"stackoverflow\">Stackoverflow</h2>\n\n<p>Of course there is a great <a href=\"https://stackoverflow.com/questions/848872/select-n-random-rows-from-sql-server-table\">Stackoverflow thread</a> with even wilder solutions.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2021/12/06/select-random-rows/","RawContent":null},{"Title":"SQL collation problems","PublishedOn":"2021-11-24T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>This week I deployed a new feature and tried it on different SQL databases and was a bit suprised that on one database this error message came up:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Cannot resolve the collation conflict between \"Latin1_General_CI_AS\" and \"SQL_Latin1_General_CP1_CI_AS\" in the equal to operation.\n</code></pre></div></div>\n\n<p>This was strange, because - at least in theory - all databases have the same schema and I was sure that each database had the same collation setting.</p>\n\n<h2 id=\"collations-on-columns\">Collations on columns</h2>\n\n<p>Well… my theory was wrong and this SQL statement told me that “some” columns had a different collation.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>select sc.name, sc.collation_name from sys.columns sc\ninner join sys.tables t on sc.object_id=t.object_id\nwhere t.name='TABLENAME'\n</code></pre></div></div>\n\n<p>As it turns out, some columns had the collation <code class=\"language-plaintext highlighter-rouge\">Latin1_General_CI_AS</code> and some had <code class=\"language-plaintext highlighter-rouge\">SQL_Latin1_General_CP1_CI_AS</code>. I’m still not sure why, but I needed to do something.</p>\n\n<h2 id=\"how-to-change-the-collation\">How to change the collation</h2>\n\n<p>To change the collation you can execute something like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ALTER TABLE MyTable\nALTER COLUMN [MyColumn] NVARCHAR(200) COLLATE SQL_Latin1_General_CP1_CI_AS\n</code></pre></div></div>\n\n<p>Unfortunately there are restrictions and you can’t change the collation if the column is referenced by any one of the following:</p>\n\n<ul>\n  <li>A computed column</li>\n  <li>An index</li>\n  <li>Distribution statistics, either generated automatically or by the CREATE STATISTICS statement</li>\n  <li>A CHECK constraint</li>\n  <li>A FOREIGN KEY constraint</li>\n</ul>\n\n<p><strong>Be aware:</strong> If you are not in control of the collation or if the collation is “fine” and you want to do this operation anyway, there might be a way to specify the collation in the SQL query.</p>\n\n<p>For more information you might want to check out this Microsoft Docs “<a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/collations/set-or-change-the-column-collation?view=sql-server-ver15\">Set or Change the Column Collation</a>”</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2021/11/24/sql-collations-problem/","RawContent":null},{"Title":"Microsoft Build 2021 session recommendations","PublishedOn":"2021-09-24T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>To be fair: <a href=\"https://www.youtube.com/playlist?list=PLlrxD0HtieHgMGEnTzEEfkADbaG8aAWRp\">Microsoft Build 2021</a> was some month ago, but the content might still be relevant today. Sooo… it took me a while, but here is a list of sessions that I found interesting. Some sessions are “better” and some “lighter”, the order doesn’t reflect that - that was just the order I watched those videos.</p>\n\n<p>The headline has a link to the video and below are some notes.</p>\n\n<h2 id=\"build-cloud-native-applications-that-run-anywhere\"><a href=\"https://mybuild.microsoft.com/sessions/2debfc2e-f0b3-4adf-bcec-d126930f806f?source=sessions\">Build cloud-native applications that run anywhere</a></h2>\n\n<ul>\n  <li>Azure Arc (GitHub &amp; Policies)</li>\n  <li>AKS</li>\n</ul>\n\n<h2 id=\"build-differentiated-saas-apps-with-the-microsoft-cloud\"><a href=\"https://mybuild.microsoft.com/sessions/3a820fb4-a38f-4bf8-b731-4411ed559807?source=sessions\">Build differentiated SaaS apps with the Microsoft Cloud</a></h2>\n\n<ul>\n  <li>Power Apps</li>\n  <li>“Light” session - only if you are interested in Microsofts “Low Code” portfolio</li>\n</ul>\n\n<h2 id=\"build-the-next-generation-of-collaborative-apps-for-hybrid-work\">[Build the next generation of collaborative apps for hybrid work</h2>\n<p>](https://mybuild.microsoft.com/sessions/2915b9b6-6b45-430a-9df7-2671318e2161?source=sessions)</p>\n\n<ul>\n  <li>Overview Dev Platform (PowerApps, Graph…)</li>\n  <li>Fluid</li>\n  <li>Adaptive Cards</li>\n  <li>Project.Reunion / WebView 2</li>\n</ul>\n\n<h2 id=\"mark-russinovich-on-azure-innovation-and-more\">[Mark Russinovich on Azure innovation and more!</h2>\n<p>](https://mybuild.microsoft.com/sessions/b7d536c1-515f-476a-83d2-85b6cf14577a?source=sessions)</p>\n\n<ul>\n  <li>Dapr</li>\n  <li>Story about RdcMan</li>\n  <li>Sysmon on linux</li>\n</ul>\n\n<h2 id=\"learn-how-to-build-exciting-apps-across-meetings-chats-and-channels-within-or-outside-microsoft-teams\">[Learn how to build exciting apps across meetings, chats, and channels within or outside Microsoft Teams](</h2>\n<p>https://mybuild.microsoft.com/sessions/512470be-15d3-4b50-b180-6532c8153931?source=sessions)</p>\n\n<ul>\n  <li>Microsoft Teams SDK</li>\n  <li>Azure Communication Services</li>\n  <li>Meeting Events, Media APIs, Share integration</li>\n  <li>Teams Connect</li>\n  <li>Adaptive Cards in Teams</li>\n  <li>Messaging Extensions in Outlook for Web</li>\n  <li>Together Mode scenes</li>\n</ul>\n\n<h2 id=\"whats-new-for-windows-desktop-application-development\"><a href=\"https://mybuild.microsoft.com/sessions/79b87707-0505-4144-aab9-94cc30f91340?source=sessions\">What’s new for Windows desktop application development</a></h2>\n\n<ul>\n  <li>Project Reunion</li>\n  <li>MAUI</li>\n</ul>\n\n<h2 id=\"understand-the-ml-process-and-embed-models-into-apps\">[Understand the ML process and embed models into apps</h2>\n<p>](https://mybuild.microsoft.com/sessions/10930f2e-ad9c-460b-b91d-844d17a5a875?source=sessions)</p>\n\n<ul>\n  <li>Azure ML</li>\n  <li>“Data scientist”: VS Code Demo with Jupyter Notebooks, PyTorch, TensorBoard</li>\n  <li>“MLOps”</li>\n  <li>Azure Machine Learning Studio</li>\n  <li>“Red/Blue”-Deployment via GitHub Actions</li>\n</ul>\n\n<h2 id=\"the-future-of-modern-application-development-with-net\">[The future of modern application development with .NET</h2>\n<p>](https://mybuild.microsoft.com/sessions/76ebac39-517d-44da-a58e-df4193b5efa9?source=sessions)</p>\n\n<ul>\n  <li>“.NET Core Momentum”</li>\n  <li>.NET Upgrade Assistant</li>\n  <li>Minimal web apis</li>\n  <li>MAUI</li>\n  <li>Blazor in Web &amp; Desktop</li>\n  <li>Hot Reload</li>\n</ul>\n\n<h2 id=\"scott-guthrie-unplugged--home-edition-extended\"><a href=\"https://mybuild.microsoft.com/sessions/71450b02-3006-4971-b4d1-80602087e10b?source=sessions\">Scott Guthrie ‘Unplugged’ – Home Edition (Extended)</a></h2>\n\n<ul>\n  <li>ScottGu</li>\n  <li>DevTools</li>\n  <li>GitHub Actions</li>\n  <li>Codespaces</li>\n  <li>Cosmos DB: Serverless, Cache, Encryption, Free tier enhancements</li>\n  <li>Azure AI</li>\n</ul>\n\n<h2 id=\"build-your-first-web-app-with-blazor--web-assembly\"><a href=\"https://mybuild.microsoft.com/sessions/d8cac5a4-6fee-4e30-aa0b-58131f2e03bc?source=sessions\">Build your first web app with Blazor &amp; Web Assembly</a></h2>\n\n<ul>\n  <li>Learning video</li>\n</ul>\n\n<h2 id=\"develop-apps-with-the-microsoft-graph-toolkit\"><a href=\"https://mybuild.microsoft.com/sessions/27dbe743-5469-453c-b165-7c7c9250a937?source=sessions\">Develop apps with the Microsoft Graph Toolkit</a></h2>\n\n<ul>\n  <li>“Low code” Learning video about the toolkit</li>\n</ul>\n\n<h2 id=\"application-authentication-in-the-microsoft-identity-platform\"><a href=\"https://mybuild.microsoft.com/sessions/9eadeef5-96a2-4fd2-ac9a-2a83deed93df?source=sessions\">Application Authentication in the Microsoft Identity platform</a></h2>\n\n<ul>\n  <li>MSAL 2.0 &amp; Microsoft Identity Platform</li>\n  <li>SPA App with JS</li>\n  <li>WebApps stuff with ASP.NET Core</li>\n  <li>Service apps</li>\n</ul>\n\n<h2 id=\"double-click-with-microsoft-engineering-leaders\">[Double-click with Microsoft engineering leaders</h2>\n<p>](https://mybuild.microsoft.com/sessions/08538f9b-e562-4d71-8b42-d240c3966ef0?source=sessions)</p>\n\n<ul>\n  <li>“Whiteboarding-style”</li>\n  <li>GitOps Concepts</li>\n  <li>Velocity - Inner/Outer Loop</li>\n  <li>Data Analytics with Cosmos DB</li>\n  <li>Azure Cloud “overview”</li>\n</ul>\n\n<h2 id=\"net-6-deep-dive-whats-new-and-whats-coming\">[.NET 6 deep dive; what’s new and what’s coming</h2>\n<p>](https://mybuild.microsoft.com/sessions/70d379f4-1173-4941-b389-8796152ec7b8?source=sessions)</p>\n\n<ul>\n  <li>.NET Momentum</li>\n  <li>.NET 5 - why</li>\n  <li>.NET 6 main features</li>\n  <li>EF Core</li>\n  <li>C# 10</li>\n  <li>Minimal WebApis</li>\n  <li>MAUI</li>\n  <li>Blazor</li>\n  <li>ASP.NET Core</li>\n  <li>Edit and Continue</li>\n</ul>\n\n<p>Hope this helps.</p>\n","Href":"https://blog.codeinside.eu/2021/09/24/build-2021-recommendation/","RawContent":null},{"Title":"Today I learned (sort of) 'fltmc' to inspect the IO request pipeline of Windows","PublishedOn":"2021-05-30T22:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>The headline is obviously a big lie, because I followed <a href=\"https://twitter.com/richturn_ms/status/1245836872598704128\">this twitter conversation</a> last year, but it’s still interesting to me and I wanted to write it somewhere down.</p>\n\n<p>Starting point was that <a href=\"https://twitter.com/BruceDawson0xB\">Bruce Dawson (Google programmer)</a> noticed, that building Chrome on Windows is slow for various reasons:</p>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Based on some twitter discussion about source-file length and build times two months ago I wrote a blog post. It&#39;s got real data based on Chromium&#39;s build, and includes animations of build-time improvements:<a href=\"https://t.co/lsLH8BNe48\">https://t.co/lsLH8BNe48</a></p>&mdash; Bruce Dawson (Antifa) (@BruceDawson0xB) <a href=\"https://twitter.com/BruceDawson0xB/status/1244850501457285122?ref_src=twsrc%5Etfw\">March 31, 2020</a></blockquote>\n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p><a href=\"https://twitter.com/TrententTye\">Trentent Tye</a> told him to disable the “filter driver”:</p>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">disabling the filter driver makes it dead dead dead. Might be worth testing with the number and sizes of files you are dealing with. Even half a millisecond of processing time adds up when it runs against millions and millions of files.</p>&mdash; Trentent Tye (@TrententTye) <a href=\"https://twitter.com/TrententTye/status/1245395826907602945?ref_src=twsrc%5Etfw\">April 1, 2020</a></blockquote>\n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>If you have never heard of a “filter driver” (like me :)), you might want to take a look <a href=\"https://docs.microsoft.com/en-us/windows-hardware/test/assessments/minifilter-diagnostics\">here</a>.</p>\n\n<p>To see the loaded filter driver on your machine try out this: Run <code class=\"language-plaintext highlighter-rouge\">fltmc</code> (<a href=\"https://docs.microsoft.com/en-us/windows-hardware/drivers/ifs/development-and-testing-tools\">fltmc.exe</a>) as admin.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2021-05-30/fltmc.png\" alt=\"x\" title=\"fltmc result\" /></p>\n\n<p>Description:</p>\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\"><p lang=\"en\" dir=\"ltr\">Each filter in the list sit in a pipe through which all IO requests bubble down and up. They see all IO requests, but ignore most. Ever wondered how Windows offers encrypted files, OneDrive/GDrive/DB file sync, storage quotas, system file protection, and, yes, anti-malware? ;)</p>&mdash; Rich Turner (@richturn_ms) <a href=\"https://twitter.com/richturn_ms/status/1245836872598704128?ref_src=twsrc%5Etfw\">April 2, 2020</a></blockquote>\n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>This makes more or less sense to me. I’m not really sure what to do with that information, but it’s cool (nerd cool, but anyway :)).</p>\n","Href":"https://blog.codeinside.eu/2021/05/30/fltmc-inspect-the-io-request-pipeline-of-windows/","RawContent":null},{"Title":"How to self host Google Fonts","PublishedOn":"2021-04-28T23:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p><a href=\"https://fonts.google.com/\">Google Fonts</a> are really nice and widely used. Typically Google Fonts consistes of the actual font file (e.g. woff, ttf, eot etc.) and some CSS, which points to those font files.</p>\n\n<p>In one of our applications, we used a HTML/CSS/JS - Bootstrap like theme and the theme linked some Google Fonts. The problem was, that we wanted to <strong>self host everything</strong>.</p>\n\n<p>After some research we discovered this tool: <strong><a href=\"https://google-webfonts-helper.herokuapp.com/\">Google-Web-Fonts-Helper</a></strong></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2021-04-28/image.png\" alt=\"x\" title=\"Google Web Fonts Helper\" /></p>\n\n<p>Pick your font, select your preferred CSS option (e.g. if you need to support older browsers etc.) and download a complete .zip package. Extract those files and add them to your web project like any other static asset. (<em>And check the font license!</em>)</p>\n\n<p>The project site is on <a href=\"https://github.com/majodev/google-webfonts-helper\">GitHub</a>.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2021/04/28/how-to-self-host-google-fonts/","RawContent":null},{"Title":"Microsoft Graph: Read user profile and group memberships","PublishedOn":"2021-01-31T23:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>In our application we have a background service, that “syncs” user data and group membership information to our database from the <a href=\"https://docs.microsoft.com/en-us/graph\">Microsoft Graph</a>.</p>\n\n<p><strong>The permission model:</strong></p>\n\n<p>Programming against the Microsoft Graph is quite easy. There are many <a href=\"https://docs.microsoft.com/en-us/graph/sdks/sdks-overview\">SDKS</a> available, but understanding the <a href=\"https://docs.microsoft.com/en-us/graph/permissions-reference\">permission model</a> is hard.</p>\n\n<p><strong>‘Directory.Read.All’ and ‘User.Read.All’:</strong></p>\n\n<p>Initially we only synced the “basic” user data to our database, but then some customers wanted to reuse some other data already stored in the graph. Our app required the ‘Directory.Read.All’ permission, because we thought that this would be the “highest” permission - this is <strong>wrong</strong>!</p>\n\n<p>If you need “directory” information, e.g. memberships, the <code class=\"language-plaintext highlighter-rouge\">Directory.Read.All</code> or <code class=\"language-plaintext highlighter-rouge\">Group.Read.All</code> is a good starting point. But if you want to load specific user data, you might need to have the <code class=\"language-plaintext highlighter-rouge\">User.Read.All</code> permission as well.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2021/01/31/microsoft-graph-read-user-profile-and-group-memberships/","RawContent":null},{"Title":"How to get all distribution lists of a user with a single LDAP query","PublishedOn":"2020-12-31T00:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>In 2007 I wrote a blogpost how easy it is to get all “groups” of a given user via the <a href=\"https://blog.codeinside.eu/2017/03/02/howto-get-user-information-and-groups-from-ad/\">tokenGroup attribute</a>.</p>\n\n<p>Last month I had the task to check why “distribution list memberships” are not part of the result.</p>\n\n<p><strong>The reason is simple:</strong></p>\n\n<p>A pure distribution list (<strong>not security enabled</strong>) is not a security group and only security groups are part of the “tokenGroup” attribute.</p>\n\n<p>After some thoughts and discussions we agreed, that it would be good if we could enhance our function and treat distribution lists like security groups.</p>\n\n<h1 id=\"how-to-get-all-distribution-lists-of-a-user\">How to get all distribution lists of a user?</h1>\n\n<p>The get all groups of a given user might be seen as trivial, but the problem is, that groups can contain other groups. \nAs always, there are a couple of ways to get a “full flat” list of all group memberships.</p>\n\n<p>A <em>stupid</em> way would be to load all groups in a recrusive function - this might work, but will result in a flood of requests.</p>\n\n<p>A <em>clever</em> way would be to write a good LDAP query and let the Active Directory do the heavy lifting for us, right?</p>\n\n<h1 id=\"12840113556141941\">1.2.840.113556.1.4.1941</h1>\n\n<p>I found some sample code online with a very strange LDAP query and it turns out:\nThere is a “magic” ldap query called “<a href=\"https://ldapwiki.com/wiki/LDAP_MATCHING_RULE_IN_CHAIN\">LDAP_MATCHING_RULE_IN_CHAIN</a>” and it does everything we are looking for:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>var getGroupsFilterForDn = $\"(&amp;(objectClass=group)(member:1.2.840.113556.1.4.1941:= {distinguishedName}))\";\n                using (var dirSearch = CreateDirectorySearcher(getGroupsFilterForDn))\n                {\n                    using (var results = dirSearch.FindAll())\n                    {\n                        foreach (SearchResult result in results)\n                        {\n                            if (result.Properties.Contains(\"name\") &amp;&amp; result.Properties.Contains(\"objectSid\") &amp;&amp; result.Properties.Contains(\"groupType\"))\n                                groups.Add(new GroupResult() { Name = (string)result.Properties[\"name\"][0], GroupType = (int)result.Properties[\"groupType\"][0], ObjectSid = new SecurityIdentifier((byte[])result.Properties[\"objectSid\"][0], 0).ToString() });\n                        }\n                    }\n                }\n</code></pre></div></div>\n\n<p>With a given distinguishedName of the target user, we can load all distribution and security groups (see below…) transitive!</p>\n\n<h1 id=\"combine-tokengroups-and-this\">Combine tokenGroups and this</h1>\n\n<p>During our testing we found some minor differences between the LDAP_MATCHING_RULE_IN_CHAIN and the tokenGroups approach. Some “system-level” security groups were missing with the LDAP_MATCHING_RULE_IN_CHAIN way. In our production code we use a combination of those two approaches and it seems to work.</p>\n\n<p>A full demo code how to get all distribution lists for a user can be found on <a href=\"https://github.com/Code-Inside/Samples/tree/master/2020/Distributionlists\">GitHub</a>.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/12/31/how-get-all-distribution-lists-of-a-user-with-a-single-ldap-query/","RawContent":null},{"Title":"Update AzureDevOps Server 2019 to AzureDevOps Server 2019 Update 1","PublishedOn":"2020-11-30T18:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p><em>We did this update in May 2020, but I forgot to publish the blogpost… so here we are</em></p>\n\n<p>Last year we updated to <a href=\"https://blog.codeinside.eu/2019/04/30/update-onprem-tfs-2018-to-azuredevops-server-2019/\">Azure DevOps Server 2019</a> and it went more or less smooth.</p>\n\n<p>In May we decided to update to the “newest” release at that time: <a href=\"https://docs.microsoft.com/en-us/azure/devops/server/release-notes/azuredevops2019u1?view=azure-devops\">Azure DevOps Server 2019 Update 1.1</a></p>\n\n<h1 id=\"setup\">Setup</h1>\n\n<p>Our AzureDevOps Server was running on a “new” Windows Server 2019 and everything was still kind of newish - so we just needed to update the AzureDevOps Server app.</p>\n\n<h1 id=\"update-process\">Update process</h1>\n\n<p>The actual update was really easy, but we had some issues after the installation.</p>\n\n<h2 id=\"steps\">Steps:</h2>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-11-30/AzureDevOps.png\" alt=\"x\" title=\"Step 1\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-11-30/AzureDevOps1.png\" alt=\"x\" title=\"Step 2\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-11-30/AzureDevOps2.png\" alt=\"x\" title=\"Step 3\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-11-30/AzureDevOps3.png\" alt=\"x\" title=\"Step 4\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-11-30/AzureDevOps4.png\" alt=\"x\" title=\"Step 5\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-11-30/AzureDevOps5.png\" alt=\"x\" title=\"Final\" /></p>\n\n<h2 id=\"aftermath\">Aftermath</h2>\n\n<p>We had some issues with our Build Agents - they couldn’t connect to the AzureDevOps Server:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>TF400813: Resource not available for anonymous access\n</code></pre></div></div>\n\n<p>As a first “workaround” (and a nice enhancement) we switched from <strong>HTTP</strong> to <strong>HTTPS</strong> internally, but this didn’t solved the problem.</p>\n\n<p>The real reason was, that our “Azure DevOps Service User” didn’t had the required write permissions for this folder:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>C:\\ProgramData\\Microsoft\\Crypto\\RSA\\MachineKeys\n</code></pre></div></div>\n\n<p>The connection issue went away, but now we introduced another problem: Our SSL Certificate was “self signed” (from our Domain Controller), so we need to register the agents like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.\\config.cmd --gituseschannel --url https://.../tfs/ --auth Integrated --pool Default-VS2019 --replace --work _work\n</code></pre></div></div>\n\n<p>The important parameter is <strong>-gituseschannel</strong>, which is needed when dealing with “self signed, but Domain ‘trusted’“-certificates.</p>\n\n<p>With this setting everything seemed to work as expected.</p>\n\n<p>Only node.js projects or toolings were “problematic”, because node.js itself don’t use the Windows Certificate Store.</p>\n\n<p>To resolve this, the <strong>root certificate</strong> from our Domain controller must be stored on the agent.</p>\n\n<p>[Environment]::SetEnvironmentVariable(“NODE_EXTRA_CA_CERTS”, “C:\\SSLCert\\root-CA.pem”, “Machine”)</p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>The update itself was easy, but it took us some hours to configure our Build Agents. After the initial hiccup it went smooth from there - no issues and we are ready for the next update, which is already <a href=\"https://docs.microsoft.com/en-us/azure/devops/server/release-notes/azuredevops2020?view=azure-devops\">released</a>.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/11/30/update-onprem-azuredevops-server-2019-to-azuredevops-server-2019-update1/","RawContent":null},{"Title":"DllRegisterServer 0x80020009 Error","PublishedOn":"2020-10-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Last week I had a very strange issue and the solution was really “easy”, but took me a while.</p>\n\n<h1 id=\"scenario\">Scenario</h1>\n\n<p>For our products we build Office COM Addins with a C++ based “Shim” that boots up our .NET code (e.g. something <a href=\"https://github.com/NetOfficeFw/ShimmingExample\">like this</a>.\nAs the nature of COM: It requires some pretty dumb registry entries to work and in theory our toolchain should “build” and automatically “register” the output.</p>\n\n<h1 id=\"problem\">Problem</h1>\n\n<p>The registration process just failed with a error message like that:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>The module xxx.dll was loaded but the call to DllRegisterServer failed with error code 0x80020009\n</code></pre></div></div>\n\n<p>After some research you will find some very old stuff or only some general advises like in this <a href=\"https://stackoverflow.com/questions/2727563/registering-a-dll-returns-0x80020009-error\">Stackoverflow.com question</a>, e.g. “run it as administrator”.</p>\n\n<h1 id=\"the-solution\">The solution</h1>\n\n<p>Luckily we had another project were we use the same approach and this worked without any issues. After comparing the files I notices some subtile differences: The <strong>file encoding</strong> was different!</p>\n\n<p>In my failing project some C++ files were encoded with <strong>UTF8-BOM</strong>. I changed everything to <strong>UTF8</strong> and after this change it worked.</p>\n\n<p>My reaction:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(╯°□°）╯︵ ┻━┻\n</code></pre></div></div>\n\n<p>I’m not a C++ dev and I’m not even sure why some files had the wrong encoding in the first place. It “worked” - at least Visual Studio 2019 was able to build the stuff, but register it with “regsrv32” just failed.</p>\n\n<p>I needed some hours to figure that out.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/10/31/dllregisterserver-0x80020009-error/","RawContent":null},{"Title":"How to share an Azure subscription in a team","PublishedOn":"2020-09-29T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>We at <strong><a href=\"https://sevitec.ch/en/\">Sevitec</a></strong> are moving more and more workloads for us or our customers to Azure.</p>\n\n<p>So the basic question needs an answer:</p>\n\n<p>How can a team share an Azure subscription?</p>\n\n<p><em>Be aware: This approach works for us. There might be better options. If we do something stupid, just tell me in the comments or via email - help is appreciated.</em></p>\n\n<h1 id=\"step-1-create-a-directory\">Step 1: Create a directory</h1>\n\n<p>We have a “company directory” with a fully configured Azure Active Directory (incl. User sync between our OnPrem system, Office 365 licenses etc.).</p>\n\n<p>Our rule of thumb is: We create for each product team a individual directory and all team members are invited in the new directory.</p>\n\n<p>Keep in mind: A directory itself costs you nothing but might help you to keep things manageable.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-09-29/step1.png\" alt=\"Create a new tenant directory\" title=\"Create a new tenant directory\" /></p>\n\n<h1 id=\"step-2-create-a-group\">Step 2: Create a group</h1>\n\n<p>This step might be optional, but all team members - except the “Administrator” - have the same rights and permissions in our company. To keep things simple, we created a group with all team members.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-09-29/step2.png\" alt=\"Put all invited users in a group\" title=\"Put all invited users in a group\" /></p>\n\n<h1 id=\"step-3-create-a-subscription\">Step 3: Create a subscription</h1>\n\n<p>Now create a subscription. The typical “Pay-as-you-go” offer will work. Be aware that the user who creates the subscription is initially setup as the <strong>Administrator</strong>.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-09-29/step3.png\" alt=\"Create a subscription\" title=\"Create a subscription\" /></p>\n\n<h1 id=\"step-4-share-the-subscription\">Step 4: “Share” the subscription</h1>\n\n<p>This is the most important step:</p>\n\n<p>You need to grant the individual  users or the group (from step 2) the <strong>“Contributor”</strong> role for this subscription via the “Access control (IAM)”.\nThe hard part is to understand how those “Role assignment” affect the subscription. I’m not even sure if the “Contributor” is the best fit, but it works for us.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-09-29/step4.png\" alt=\"Pick the correct role assignment\" title=\"Pick the correct role assignment\" /></p>\n\n<h1 id=\"summary\">Summary</h1>\n\n<p>I’m not really sure why such a basic concept is labeled so poorly but you really need to pick the correct role assignment and the other person should be able to use the subscription.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/09/29/how-to-share-an-azure-subscription-in-a-team/","RawContent":null},{"Title":"How to run a legacy WCF .svc Service on Azure AppService","PublishedOn":"2020-08-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Last month we wanted to run good old WCF powered service on Azures <a href=\"https://azure.microsoft.com/en-us/services/app-service/web/\">“App Service”</a>.</p>\n\n<h1 id=\"wcf-whats-that\">WCF… what’s that?</h1>\n\n<p>If you are not familiar with WCF: Good! For the interested ones: <a href=\"https://en.wikipedia.org/wiki/Windows_Communication_Foundation\">WCF</a> is or was a framework to build mostly SOAP based services in the .NET Framework 3.0 timeframe. Some parts where “good”, but most developers would call it a complex monster.</p>\n\n<p>Even in the glory days of WCF I tried to avoid it at all cost, but unfortunately I need to maintain a WCF based service.</p>\n\n<p>For the curious: The project template and the tech is still there. Search for “WCF”.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-08-31/template.png\" alt=\"VS WCF Template\" title=\"VS WCF Template\" /></p>\n\n<p>The template will produce something like that:</p>\n\n<p>The actual “service endpoint” is the <code class=\"language-plaintext highlighter-rouge\">Service1.svc</code> file.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-08-31/structure.png\" alt=\"WCF structure\" title=\"WCF structure\" /></p>\n\n<h1 id=\"running-on-azure-the-problem\">Running on Azure: The problem</h1>\n\n<p>Let’s assume we have a application with a .svc endpoint. In theory we can deploy this application to a standard Windows Server/IIS without major problems.</p>\n\n<p>Now we try to deploy this very same application to Azure AppService and this is the result after we invoke the service from the browser:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\"The resource you are looking for has been removed, had its name changed, or is temporarily unavailable.\" (HTTP Response was 404)\n</code></pre></div></div>\n\n<p>Strange… very strange. In theory a blank HTTP 400 should appear, but not a HTTP 404. The service itself was not “triggered”, because we had some logging in place, but the request didn’t get to the actual service.</p>\n\n<p>After hours of debugging, testing and googling around I created a new “blank” WCF service from the Visual Studio template got the same error.</p>\n\n<p>The good news: It’s was not just my code something is blocking the request.</p>\n\n<p>After some hours I found a helpful switch in the Azure Portal and activated the “Failed Request tracing” feature (yeah… I could found it sooner) and I discovered this:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-08-31/fail.png\" alt=\"Failed Request tracing image\" title=\"Failed Request tracing\" /></p>\n\n<h1 id=\"running-on-azure-the-solution\">Running on Azure: The solution</h1>\n\n<p>My initial thoughts were correct: The request was blocked. It was treated as “static content” and the actual WCF module was not mapped to the .svc extension.</p>\n\n<p>To “re-map” the <code class=\"language-plaintext highlighter-rouge\">.svc</code> extension to the correct handler I needed to add this to the <code class=\"language-plaintext highlighter-rouge\">web.config</code>:</p>\n\n<div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>...\n<span class=\"nt\">&lt;system.webServer&gt;</span>\n    ...\n\t<span class=\"nt\">&lt;handlers&gt;</span>\n\t\t<span class=\"nt\">&lt;remove</span> <span class=\"na\">name=</span><span class=\"s\">\"svc-integrated\"</span> <span class=\"nt\">/&gt;</span>\n\t\t<span class=\"nt\">&lt;add</span> <span class=\"na\">name=</span><span class=\"s\">\"svc-integrated\"</span> <span class=\"na\">path=</span><span class=\"s\">\"*.svc\"</span> <span class=\"na\">verb=</span><span class=\"s\">\"*\"</span> <span class=\"na\">type=</span><span class=\"s\">\"System.ServiceModel.Activation.HttpHandler\"</span> <span class=\"na\">resourceType=</span><span class=\"s\">\"File\"</span> <span class=\"na\">preCondition=</span><span class=\"s\">\"integratedMode\"</span> <span class=\"nt\">/&gt;</span>\n\t<span class=\"nt\">&lt;/handlers&gt;</span>\n<span class=\"nt\">&lt;/system.webServer&gt;</span>\n...\n\n</code></pre></div></div>\n\n<p>With this configuration everything worked as expected on Azure AppService.</p>\n\n<p><strong>Be aware:</strong></p>\n\n<p>I’m really not 100% sure why this is needed in the first place. I’m also not 100% sure if the name <code class=\"language-plaintext highlighter-rouge\">svc-integrated</code> is correct or important.</p>\n\n<p>This blogpost is a result of these <a href=\"https://twitter.com/robert0muehsig/status/1297915212541186056?s=20\">tweets</a>.</p>\n\n<p>That was a tough ride… Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/08/31/how-to-run-a-legacy-wcf-svc-service-on-azure-app-service/","RawContent":null},{"Title":"EWS, Exchange Online and OAuth with a Service Account","PublishedOn":"2020-07-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>This week we had a fun experiment: We wanted to talk to Exchange Online via the “old school” EWS API, but in a “sane” way.</p>\n\n<p>But here is the full story:</p>\n\n<h1 id=\"our-goal\">Our goal</h1>\n\n<p>We wanted to access contact information via a web service from the organization, just like the traditional “Global Address List” in Exchange/Outlook. We knew that EWS was on option for the OnPrem Exchange, but what about Exchange Online?</p>\n\n<p>The big problem: Authentication is tricky. We wanted to use a “traditional” Service Account approach (think of username/password). Unfortunately the “basic auth” way will be blocked <a href=\"https://techcommunity.microsoft.com/t5/exchange-team-blog/basic-authentication-and-exchange-online-april-2020-update/ba-p/1275508\">in the near future</a> because of security concerns (makes sense TBH). There is an alternative approach available, but at first it seems not to work as we would like.</p>\n\n<p>So… what now?</p>\n\n<h1 id=\"ews-is-old-why\">EWS is… old. Why?</h1>\n\n<p>The <a href=\"https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/start-using-web-services-in-exchange\">Exchange Web Services</a> are old, but still quite powerful and still supported for Exchange Online and OnPrem Exchanges. On the other hand we could use the Microsoft Graph, but - at least currently - there is not a single “contact” API available.</p>\n\n<p>To mimic the GAL we would need to query <a href=\"https://docs.microsoft.com/en-us/graph/api/user-list\">List Users</a> and <a href=\"https://docs.microsoft.com/en-us/graph/api/orgcontact-list?view=graph-rest-1.0&amp;tabs=http\">List orgContacts</a>, which would be ok, but the “orgContacts” has a “flaw”. \n“Hidden” contacts (“msexchhidefromaddresslists”) are returned from this API and we thought that this might be a NoGo for our customers.</p>\n\n<p>Another argument for using EWS was, that we could support OnPrem and Online with one code base.</p>\n\n<h1 id=\"docs-from-microsoft\">Docs from Microsoft</h1>\n\n<p>The good news is, that EWS and the Auth problem is more or less good <a href=\"https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/how-to-authenticate-an-ews-application-by-using-oauth\">documented here</a>.</p>\n\n<p>There are two ways to authenticate against the Microsoft Graph or any Microsoft 365 API: Via “delegation” or via “application”.</p>\n\n<p><strong>Delegation:</strong></p>\n\n<p>Delegation means, that we can write a desktop app and all actions are executed in the name of the signed in user.</p>\n\n<p><strong>Application:</strong></p>\n\n<p>Application means, that the app itself can do some actions without any user involved.</p>\n\n<h1 id=\"ews-and-the-application-way\">EWS and the application way</h1>\n\n<p>At first we thought that we might need to use the “application” way.</p>\n\n<p>The good news is, that this was easy and worked. \nThe bad news is, that the application needs the EWS permission “full_access_as_app”, which means that our application can access <strong>all</strong> mailboxes from this tenant. This might be ok for certain apps, but this scared us.</p>\n\n<p>Back to the delegation way:</p>\n\n<h1 id=\"ews-and-the-delegation-way\">EWS and the delegation way</h1>\n\n<p>The documentation from Microsoft is good, but our “Service Account” usecase was not mentioned. In the example from Microsoft a user needs to manually login.</p>\n\n<h1 id=\"solution--tldr\">Solution / TL;DR</h1>\n\n<p>After some research I found the solution to use a “username/password” OAuth flow to access a single mailbox via EWS:</p>\n\n<ol>\n  <li>\n    <p>Follow the normal <a href=\"https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/how-to-authenticate-an-ews-application-by-using-oauth\">“delegate” steps from the Microsoft Docs</a></p>\n  </li>\n  <li>\n    <p>Instead of this code, which will trigger the login UI:</p>\n  </li>\n</ol>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>...\n// The permission scope required for EWS access\nvar ewsScopes = new string[] { \"https://outlook.office.com/EWS.AccessAsUser.All\" };\n\n// Make the interactive token request\nvar authResult = await pca.AcquireTokenInteractive(ewsScopes).ExecuteAsync();\n...\n</code></pre></div></div>\n\n<p>Use the “AcquireTokenByUsernamePassword” method:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>...\nvar cred = new NetworkCredential(\"UserName\", \"Password\");\nvar authResult = await pca.AcquireTokenByUsernamePassword(new string[] { \"https://outlook.office.com/EWS.AccessAsUser.All\" }, cred.UserName, cred.SecurePassword).ExecuteAsync();\n...\n</code></pre></div></div>\n\n<p>To make this work you need to enable the “Treat application as public client” under “Authentication” &gt; “Advanced settings” in our AAD Application because this uses the <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth-ropc\">“Resource owner password credential flow”</a>.</p>\n\n<p>Now you should be able to get the AccessToken and do some EWS magic.</p>\n\n<p><em>I posted a shorter version on <a href=\"https://stackoverflow.com/questions/57009837/how-to-get-oauth2-access-token-for-ews-managed-api-in-service-daemon-application/63175301#63175301\">Stackoverflow.com</a></em></p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/07/31/ews-exchange-online-oauth-with-a-service-account/","RawContent":null},{"Title":"Can a .NET Core 3.0 compiled app run with a .NET Core 3.1 runtime?","PublishedOn":"2020-06-30T23:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Within <a href=\"https://oneoffixx.com\">our product</a> we move more and more stuff in the .NET Core land.\nLast week we had a disussion around needed software requirements and in the <strong>.NET Framework</strong> land this question was always easy to answer:</p>\n\n<blockquote>\n  <p>.NET Framework 4.5 or higher.</p>\n</blockquote>\n\n<p>With <strong>.NET Core</strong> the answer is sligthly different:</p>\n\n<p>In <em>theory</em> major versions are compatible, e.g. if you compiled your app with .NET Core 3.0 and a .NET Core runtime 3.1 is the only installed 3.X runtime on the machine, this runtime is used.</p>\n\n<p>This system is called <a href=\"https://docs.microsoft.com/en-us/dotnet/core/versions/selection#framework-dependent-apps-roll-forward\">“Framework-dependent apps roll forward”</a> and sounds good.</p>\n\n<h1 id=\"the-bad-part\">The bad part</h1>\n\n<p>Unfortunately this didn’t work for us. Not sure why, but our app refuses to work because a .dll is not found or missing. The reason is currently not clear. Be aware that Microsoft has written a hint that such things might occure:</p>\n\n<blockquote>\n  <p>It’s possible that 3.0.5 and 3.1.0 behave differently, particularly for scenarios like serializing binary data.</p>\n</blockquote>\n\n<h1 id=\"the-good-part\">The good part</h1>\n\n<p>With .NET Core we could ship the framework with our app and it should run fine wherever we deploy it.</p>\n\n<h1 id=\"summery\">Summery</h1>\n\n<p>Read the docs about the “app roll forward” approach if you have similar concerns, but test your app with that combination.</p>\n\n<p>As a sidenote: 3.0 is not supported anymore, so it would be good to upgrade it to 3.1 anyway, but we might see a similar pattern with the next .NET Core versions.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/06/30/can-a-dotnet-core-30-compiled-app-run-with-a-dotnet-core-31-runtime/","RawContent":null},{"Title":"SqlBulkCopy for fast bulk inserts","PublishedOn":"2020-05-31T23:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Within our product <a href=\"https://oneoffixx.com/\">OneOffixx</a> we can create a “full export” from the product database. Because of limitations with normal MS SQL backups (e.g. compatibility with older SQL databases etc.), we created our own export mechanic.\nAn export can be up to 1GB and more. This is nothing to serious and far from “big data”, but still not easy to handle and we had some issues to import larger “exports”. \nOur importer was based on a Entity Framework 6 implementation and it was really slow… last month we tried to resolve this and we are quite happy. Here is how we did it:</p>\n\n<p><strong>TL;DR Problem:</strong></p>\n\n<p>Bulk Insert with a Entity Framework based implementation is really slow. There is at least one NuGet package, which seems to help, but unfortunately we run into some obscure issues. This <a href=\"https://stackoverflow.com/questions/5940225/fastest-way-of-inserting-in-entity-framework\">Stackoverflow question highlights</a> some numbers and ways of doing it.</p>\n\n<p><strong>SqlBulkCopy to the rescure:</strong></p>\n\n<p>After my failed attempt to tame our EF implementation I discovered the <a href=\"https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/bulk-copy-operations-in-sql-server\">SqlBulkCopy</a> operation. In .NET (Full Framework and .NET Standard!) the usage is simple via the <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.data.sqlclient.sqlbulkcopy?view=dotnet-plat-ext-3.1\">“SqlBulkCopy” class</a>.</p>\n\n<p>Our importer looks more or less like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>using (var scope = new TransactionScope(TransactionScopeOption.RequiresNew, TimeSpan.FromMinutes(30), TransactionScopeAsyncFlowOption.Enabled))\nusing (SqlBulkCopy bulkCopy = new SqlBulkCopy(databaseConnectionString))\n    {\n    var dt = new DataTable();\n    dt.Columns.Add(\"DataColumnA\");\n    dt.Columns.Add(\"DataColumnB\");\n    dt.Columns.Add(\"DataColumnId\", typeof(Guid));\n\n    foreach (var dataEntry in data)\n    {\n        dt.Rows.Add(dataEntry.A, dataEntry.B, dataEntry.Id);\n    }\n\n    sqlBulk.DestinationTableName = \"Data\";\n    sqlBulk.AutoMapColumns(dt);\n    sqlBulk.WriteToServer(dt);\n\n    scope.Complete();\n    }\n\npublic static class Extensions\n    {\n        public static void AutoMapColumns(this SqlBulkCopy sbc, DataTable dt)\n        {\n            sbc.ColumnMappings.Clear();\n\n            foreach (DataColumn column in dt.Columns)\n            {\n                sbc.ColumnMappings.Add(column.ColumnName, column.ColumnName);\n            }\n        }\n    }       \n</code></pre></div></div>\n\n<p>Some notes:</p>\n\n<ul>\n  <li>The TransactionScope is not required, but still nice.</li>\n  <li>The SqlBulkCopy instance just needs the databaseConnectionString.</li>\n  <li>A Datatable is needed and (I’m not sure why) all non crazy SQL datatypes are magically supported, but GUIDs needs to be typed explicitly.</li>\n  <li>Insert thousands of data in your dataTable, point the SqlBulkCopy to your destination table, map those columns and write the to the server.</li>\n  <li>You can use the <a href=\"https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/multiple-bulk-copy-operations\">same instance for multiple bulk</a> operations.</li>\n  <li>There is also an Async implementation available.</li>\n</ul>\n\n<p>Only “downside”: SqlBulkCopy is a table by table insert. You need to insert your data in the correct order if you have any db constraints in your schema.</p>\n\n<p><strong>Result:</strong></p>\n\n<p>We reduced the import from several minutes to seconds :)</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/05/31/sqlbulkcopy-for-fast-bulk-inserts/","RawContent":null},{"Title":"Blazor for Office Add-ins: First look","PublishedOn":"2020-04-30T21:30:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Last week I did some research and tried to build a pretty basic Office Addin (within the “new” <a href=\"https://docs.microsoft.com/en-us/office/dev/add-ins/overview/office-add-ins\">web based Addin model</a>) with <strong><a href=\"https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor\">Blazor</a></strong>.</p>\n\n<p>Side note: Last year I blogged about how to build <a href=\"https://blog.codeinside.eu/2019/01/31/office-addins-with-aspnet-core/\">Office Add-ins with ASP.NET Core</a>.</p>\n\n<h1 id=\"why-blazor\">Why Blazor?</h1>\n\n<p>My daily work home is in the C# and .NET land, so it would be great to use Blazor for Office Addins, right? \nA Office Add-in is just a web application with a “communication tunnel” to the hosting Office application - not very different from the real web.</p>\n\n<h1 id=\"what-might-work-serverside-blazor\">What (might) work: Serverside Blazor</h1>\n\n<p>My first try was with a “standard” serverside Blazor application and I just pointed the dummy Office Add-in manifest file to the site and it (obviously) worked:</p>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"et\" dir=\"ltr\">Mhh... maybe?🤔😏<a href=\"https://twitter.com/hashtag/Blazor?src=hash&amp;ref_src=twsrc%5Etfw\">#Blazor</a> <a href=\"https://twitter.com/hashtag/OfficeDev?src=hash&amp;ref_src=twsrc%5Etfw\">#OfficeDev</a> <a href=\"https://t.co/BzdVQzIeqA\">pic.twitter.com/BzdVQzIeqA</a></p>&mdash; Robert Muehsig (@robert0muehsig) <a href=\"https://twitter.com/robert0muehsig/status/1253351161236787202?ref_src=twsrc%5Etfw\">April 23, 2020</a></blockquote>\n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>I assume that serverside Blazor is for the client not very “complicated” and it would probably work.</p>\n\n<p>After my initial tweet <strong><a href=\"https://twitter.com/manuelsidler\">Manuel Sidler</a></strong> jumped in and made a simple demo project, which also invokes the <strong>Office.js</strong> APIs from C#!</p>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Building an <a href=\"https://twitter.com/hashtag/Office?src=hash&amp;ref_src=twsrc%5Etfw\">#Office</a> Add-In based on <a href=\"https://twitter.com/hashtag/Blazor?src=hash&amp;ref_src=twsrc%5Etfw\">#Blazor</a> (Server) could be possible. Whether it&#39;s a good idea or not is another story ;) <a href=\"https://t.co/LdSPYl4SRh\">https://t.co/LdSPYl4SRh</a> (thanks <a href=\"https://twitter.com/robert0muehsig?ref_src=twsrc%5Etfw\">@robert0muehsig</a> to get me jump up on this idea) <a href=\"https://t.co/1w29212qdS\">pic.twitter.com/1w29212qdS</a></p>&mdash; Manuel Sidler (@manuelsidler) <a href=\"https://twitter.com/manuelsidler/status/1253668691956445184?ref_src=twsrc%5Etfw\">April 24, 2020</a></blockquote>\n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p>Checkout his <strong><a href=\"https://github.com/manuelsidler/blazor-office-addin\">repository on GitHub</a></strong> for further information.</p>\n\n<h1 id=\"what-wont-work-webassembly-if-i-dont-miss-anything\">What won’t work: WebAssembly (if I don’t miss anything)</h1>\n\n<p>Serverside Blazor is cool, but has some problems (e.g. a server connection is needed and scaling is not that easy) - what about <strong>WebAssembly</strong>?</p>\n\n<p>Well… Blazor WebAssembly is still in preview and I tried the same setup that worked for serverside blazor.</p>\n\n<p><strong>Result:</strong></p>\n\n<p>The desktop PowerPoint (I tried to build a PowerPoint addin) keeps crashing after I add the addin. On Office Online it seems to work, but not for a very long time:</p>\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\"><p lang=\"en\" dir=\"ltr\">Blazor WebAssembly seems not to work or at least the startup is super weird :-/ <a href=\"https://t.co/IvnecQFMj2\">pic.twitter.com/IvnecQFMj2</a></p>&mdash; Robert Muehsig (@robert0muehsig) <a href=\"https://twitter.com/robert0muehsig/status/1254726027684777986?ref_src=twsrc%5Etfw\">April 27, 2020</a></blockquote>\n<script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<p><strong>Possible reasons:</strong></p>\n\n<p>The default Blazor WebAssembly installs a service worker. I removed that part, but I’m not 100% sure if I did it correctly. At least they are currently not supported from the <a href=\"https://docs.microsoft.com/en-us/office/dev/add-ins/concepts/browsers-used-by-office-web-add-ins#service-workers-are-not-working\">Office Add-in Edge WebView</a>. My experience with Office Online and the Blazor addin failed as well and I don’t think that service workers are the problem.</p>\n\n<p>I’m not really sure why its not working, but its quite early for Blazor WebAssembly, so… time will tell.</p>\n\n<h1 id=\"what-does-the-office-dev-team-think-of-blazor\">What does the Office Dev Team think of Blazor?</h1>\n\n<p>Currently I just found one comment on <a href=\"https://developer.microsoft.com/en-us/office/blogs/office-add-ins-community-call-november-13-2019/\">this blogpost</a> regarding Blazor:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Will Blazor be supported for Office Add-ins?\n\nNo, it will be a React Office.js add-in. We don’t have any plans to support Blazor yet. For that, please put a note on our UserVoice channel: https://officespdev.uservoice.com. There are several UserVoice items already on this, so know that we are listening to your feedback and prioritizing based on customer requests. The more requests we get for particular features, the more we will consider moving forward with developing it. \n</code></pre></div></div>\n\n<p>Well… vote for it! ;)</p>\n","Href":"https://blog.codeinside.eu/2020/04/30/blazor-for-office-addins-first-look/","RawContent":null},{"Title":"Escape enviroment variables in MSIEXEC parameters","PublishedOn":"2020-03-27T23:59:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"problem\">Problem</h1>\n\n<p>Customers can install our <a href=\"https://oneoffixx.com/\">product</a> on Windows with a standard MSI package. To automate the installation administrators can use <a href=\"https://docs.microsoft.com/de-de/windows/win32/msi/command-line-options?redirectedfrom=MSDN\">MSIEXEC</a> and MSI parameters to configure our client.</p>\n\n<p>A simple installation can look like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>msiexec /qb /i \"OneOffixx.msi\" ... CACHEFOLDER=\"D:/OneOffixx/\"\n</code></pre></div></div>\n\n<p>The “CACHEFOLDER” parameter will be written in the .exe.config file and our program will read it and stores offline content under the given location.</p>\n\n<p>So far, so good.</p>\n\n<p>For Terminal Server installations or “multi-user” scenarios this will not work, because each cache is bound to a local account. To solve this we could just insert the “%username%” enviroment variable, right?</p>\n\n<p>Well… no… at least not with the obvious call, because this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>msiexec /qb /i \"OneOffixx.msi\" ... CACHEFOLDER=\"D:/%username%/OneOffixx/\"\n</code></pre></div></div>\n\n<p>will result in a call like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>msiexec /qb /i \"OneOffixx.msi\" ... CACHEFOLDER=\"D:/admin/OneOffixx/\"\n</code></pre></div></div>\n\n<h1 id=\"solution\">Solution</h1>\n\n<p>I needed a few hours and some Google-Fu to found the answer.</p>\n\n<p>To “escape” those variables we need to invoke it like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>msiexec /qb /i \"OneOffixx.msi\" ... CACHEFOLDER=\"D:/%%username%%/OneOffixx/\"\n</code></pre></div></div>\n\n<p><strong>Be aware:</strong> This stuff is a mess. It depends on your scenario. Checkout <a href=\"https://stackoverflow.com/a/31420292\">this Stackoverflow answer</a> to learn more. The double percent did the trick for us, so I guess it is “ok-ish”.</p>\n\n<h1 id=\"update\">Update</h1>\n\n<p>The above solution only works if you save the command in a file, e.g. in a install.bat file. If you want to invoke this in the CMD shell use this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cmd /v /c msiexec /qb /i \"OneOffixx.msi\" ... CACHEFOLDER=\"%appdata%/OneOffixx\"\n</code></pre></div></div>\n\n<p>The important parameter is <strong><a href=\"https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/cmd\">“/v”</a></strong>, which enables delayed environment variable expansion.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/03/27/escape-environment-variables-in-msiexec-parameters/","RawContent":null},{"Title":"TLS/SSL problem: 'Could not create SSL/TLS secure channel'","PublishedOn":"2020-02-29T23:59:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"problem\">Problem</h1>\n\n<p>Last week I had some fun debugging a weird bug. Within our application one module makes HTTP requests to a 3rd party service and depending on the running Windows version this call worked or failed with:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>'Could not create SSLTLS secure channel'\n</code></pre></div></div>\n\n<p>I knew that older TLS/SSL versions are deprecated and that many services refuse those protocols, but we still didn’t finally understand the issue:</p>\n\n<ul>\n  <li>The HTTPS call worked without any issues on a Windows 10 1903 machine</li>\n  <li>The HTTPS call didn’t work on a Windows 7 SP1 (yeah… customers…) and a Windows 10 1803 machine.</li>\n</ul>\n\n<p>Our software uses the .NET Framework 4.7.2 and therefore I thought <a href=\"https://docs.microsoft.com/en-us/dotnet/framework/network-programming/tls\">that this should be enough</a>.</p>\n\n<h1 id=\"root-cause\">Root cause</h1>\n\n<p>Both systems (or at least they represents two different customer enviroments) didn’t enable TLS 1.2.</p>\n\n<p>On Windows 7 (and I think on the older Windows 10 releases) there are multiple ways. On way is to set a <a href=\"https://support.microsoft.com/en-us/help/3140245/update-to-enable-tls-1-1-and-tls-1-2-as-default-secure-protocols-in-wi#easy\">registry key to enable the newer protocols</a>.</p>\n\n<p>Our setup was a bit more complex than this and I needed like a day to figure everything out. A big mystery was, that some services were accessible even under the old systems till I figured out, that some sites even support a pure HTTP connection without any TLS.</p>\n\n<p>Well… to summarize it: Keep your systems up to date. If you have any issues with TLS/SSL make sure your system does support it.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/02/29/ssl-channel-problems-on-older-systems/","RawContent":null},{"Title":"Accessibility Insights: Spot accessibilities issues easily for Web Apps and Windows Apps","PublishedOn":"2020-01-31T23:59:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"accessibility\">Accessibility</h1>\n\n<p>Accessibility is a huge and important topic nowadays. Keep in mind that in some sectors (e.g. government, public service etc.) accessibility is a requirement by law (in Europe the <a href=\"https://docs.microsoft.com/en-us/microsoft-365/compliance/offering-en-301-549-eu\">European Standards EN 301 549</a>).</p>\n\n<p>If you want to learn more about accessibility in general this might be handy: <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Accessibility/What_is_accessibility\">MDN Web Docs: What is accessibility?</a></p>\n\n<h1 id=\"tooling-support\">Tooling support</h1>\n\n<p>In my day to day job for <a href=\"https://oneoffixx.com/\">OneOffixx</a> I was looking for a good tool to spot accessibility issues in our Windows and Web App. I knew that there must be some good tools for web development, but was not sure about Windows app support.</p>\n\n<p>Accessibility itself has many aspects, but these were some non obvious key aspects in our application that we needed to address:</p>\n\n<ul>\n  <li>Good contrasts: This one is easy to understand, but sometimes some colors or hints in the software didn’t match the required contrast ratios. High contrast modes are even harder.</li>\n  <li>Keyboard navigation: This one is also easy to understand, but can be really hard. Some elements are nice to look at, but hard to focus with pure keyboard commands.</li>\n  <li>Screen reader: After your application can be navigated with the keyboard you can checkout screen reader support.</li>\n</ul>\n\n<h1 id=\"accessibility-insights\">Accessibility Insights</h1>\n\n<p>Then I found this app from Microsoft: <a href=\"https://accessibilityinsights.io/\">Accessibility Insights</a></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/logo.png\" alt=\"x\" title=\"Logo\" /></p>\n\n<p>The tool scans active applications for any accessibility issues. Side node: The UX is a bit strange, but OK - you get used to it.</p>\n\n<p><strong>Live inspect:</strong></p>\n\n<p>The starting point is to select a window or a visible element on the screen and Accessibility Insights will highlight it:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/live-inspect.png\" alt=\"x\" title=\"Live inspect\" /></p>\n\n<p>Then you can click on “Test”, which gives you detailed test result:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/checks.png\" alt=\"x\" title=\"Checks\" /></p>\n\n<p>(I’m not 100% if each error is really problematic, because a lot of Microsofts very own applications have many issues here.)</p>\n\n<p><strong>Tab Stops:</strong></p>\n\n<p>As already written: Keyboard navigation is a key aspect. This tool has a nice way to visualize “Tab” navigation and might help you to better understand the navigation with a keyboard:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/tabstop.png\" alt=\"x\" title=\"Tab Stops\" /></p>\n\n<p><strong>Contrasts:</strong></p>\n\n<p>The third nice helper in Accessibility Insights is the contrast checker. It highlights contrast issues and has an easy to use color picker integrated.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/contrasts.png\" alt=\"x\" title=\"Contrasts\" /></p>\n\n<p>Behind the scenes this tool uses the <a href=\"https://docs.microsoft.com/en-us/windows/win32/winauto/windows-automation-api-portal\">Windows Automation API / Windows UI Automation API</a>.</p>\n\n<h1 id=\"accessibility-insights-for-chrome\">Accessibility Insights for Chrome</h1>\n\n<p>Accessibility Insights can be used in Chrome (or Edge) as well to check web apps. The extension is similar to the Windows counter part, but has a much better “assessment” story:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/web-fastpass.png\" alt=\"x\" title=\"Chrome: Fastpass on GitHub\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/web-assessment.png\" alt=\"x\" title=\"Chrome: Accessment\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2020-01-31/web-tab.png\" alt=\"x\" title=\"Chrome: Tab Stops\" /></p>\n\n<h1 id=\"summary\">Summary</h1>\n\n<p>This tool was really a time saver. The UX might not be the best on Windows, but it gives you some good hints. After we discovered this app for our Windows Application we used the Chrome version for our Web Application as well.</p>\n\n<p>If you use or used other tools in the past: Please let me know. I’m pretty sure there are some good apps out there to help build better applications.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2020/01/31/accessibility-insights-spot-accessibility-issues-easily-for-webapps-and-winapps/","RawContent":null},{"Title":"T-SQL Pagination","PublishedOn":"2019-12-30T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"the-problem\">The problem</h1>\n\n<p>This is pretty trivial: Let’s say you have blog with 1000 posts in your database, but you only want to show 10 entries “per page”. You need to find a way how to slice this dataset into smaller pieces.</p>\n\n<h1 id=\"the-solution\">The solution</h1>\n\n<p>In theory you could load everything from the database and filter the results “in memory”, but this would be quite stupid for many reasons (e.g. you load much more data then you need and the computing resources could be used for other requests etc.).</p>\n\n<p>If you use plain T-SQL (<strong>and Microsoft SQL Server 2012 or higher</strong>) you can express a query with paging like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT * FROM TableName ORDER BY id OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;\n</code></pre></div></div>\n\n<p>Read it like this: Return the first 10 entries from the table. To get the next 10 entries use OFFSET 10 and so on.</p>\n\n<p>If you use the Entity Framework (or Entity Framework Core or any other O/R-Mapper) the chances are high they do exact the same thing internally for you.</p>\n\n<p>Currently all <a href=\"https://support.microsoft.com/en-us/lifecycle/search?alpha=SQL%20Server\">“supported” SQL Servers</a> support this syntax nowadays. If you try this syntax on SQL Server 2008 or SQL Server 2008 R2 you will receive a SQL error</p>\n\n<h1 id=\"links\">Links</h1>\n\n<p>Checkout the <a href=\"https://docs.microsoft.com/en-us/sql/t-sql/queries/select-order-by-clause-transact-sql?view=sql-server-ver15#using-offset-and-fetch-to-limit-the-rows-returned\">documentation</a> for further information.</p>\n\n<p>This topic might seem “simple”, but during my developer life I was suprised how “hard” paging was with SQL Server. Some 10 years ago (… I’m getting old!) I was using MySQL and the OFFSET and FETCH syntax was introduced with Microsoft SQL Server 2012. This <a href=\"https://stackoverflow.com/questions/109232/what-is-the-best-way-to-paginate-results-in-sql-server\">Stackoverflow.com Question</a> shows the different ways how to implement it. The “older” ways are quite weird and complicated.</p>\n\n<p>I also recommend <a href=\"https://blog.greglow.com/2019/05/13/t-sql-101-17-paginating-rows-returned-from-sql-server-t-sql-queries/\">this blog</a> for everyone who needs to write T-SQL.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/12/30/t-sql-pagination/","RawContent":null},{"Title":"Did you know that you can build .NET Core apps with MSBuild.exe?","PublishedOn":"2019-11-30T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"the-problem\">The problem</h1>\n\n<p>We recently updated a bunch of our applications to .NET Core 3.0. Because of the compatibility changes to the “old framework” we try to move more and more projects to .NET Core, but some projects still target “.NET Framework 4.7.2”, but they should work “ok-ish” when used from .NET Core 3.0 applications.</p>\n\n<p>The first tests were quite successful, but unfortunately when we tried to build and pulish the updated .NET Core 3.0 app via ‘dotnet publish’ (with a reference to a .NET Framework 4.7.2 app) we faced this error:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>C:\\Program Files\\dotnet\\sdk\\3.0.100\\Microsoft.Common.CurrentVersion.targets(3639,5): error MSB4062: The \"Microsoft.Build.Tasks.AL\" task could not be loaded from the assembly Microsoft.Build.Tasks.Core, Version=15.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a.  Confirm that the &lt;UsingTask&gt; declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. \n</code></pre></div></div>\n\n<h1 id=\"the-root-cause\">The root cause</h1>\n\n<p>After some experiments we saw a pattern:</p>\n\n<p>Each .NET Framework 4.7.2 based project with a ‘.resx’ file would result in the above error.</p>\n\n<h1 id=\"the-solution\">The solution</h1>\n\n<p>‘.resx’ files are still a valid thing to do, so we checked out if we could work around this problem, but unfortunately this was not super successful. We moved some resources, but in the end some resources must stay in the corresponding file.</p>\n\n<p>We used the ‘dotnet publish…’ command to build and publish .NET Core based applications, but then I tried to build the .NET Core application from MSBuild.exe and discovered that this worked.</p>\n\n<h1 id=\"lessons-learned\">Lessons learned</h1>\n\n<p>If you have a mixed environment with “old” .NET Framework based applications with resources in use and want to use this in combination with .NET Core: Try to use the “old school” MSBuild.exe way.</p>\n\n<p>MSBuild.exe is capable of building .NET Core applications and it is more or less the same.</p>\n\n<h2 id=\"be-aware\">Be aware</h2>\n\n<p>Regarding ASP.NET Core applications: The ‘dotnet publish’ command will create a web.config file - if you use the MSBuild approach this file will not be created automatically. I’m not sure if there is a hidden switch, but if you just treat .NET Core apps like .NET Framework console applications the web.config file is not generated. \nThis might lead to some problems when you deploy this to an IIS.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/11/30/build-dotnetcore-apps-with-msbuild-to-avoid-strange-netframeworkbased-errors/","RawContent":null},{"Title":"IdentityServer & Azure AD Login: Unkown Response Type text/html","PublishedOn":"2019-10-13T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"the-problem\">The problem</h1>\n\n<p>Last week we had some problems with our <a href=\"https://developer.microsoft.com/en-us/graph\">Microsoft Graph / Azure AD login</a> based system. From a user perspective it was all good until the redirect from the Microsoft Account to our IdentityServer.</p>\n\n<p>As STS and for all auth related stuff we use the excellent <a href=\"https://identityserver.io/\">IdentityServer4</a>.</p>\n\n<p>We used the following configuration:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>services.AddAuthentication()\n            .AddOpenIdConnect(office365Config.Id, office365Config.Caption, options =&gt;\n            {\n                options.SignInScheme = IdentityServerConstants.ExternalCookieAuthenticationScheme;\n                options.SignOutScheme = IdentityServerConstants.SignoutScheme;\n                options.ClientId = office365Config.MicrosoftAppClientId;            // Client-Id from the AppRegistration \n                options.ClientSecret = office365Config.MicrosoftAppClientSecret;    // Client-Secret from the AppRegistration \n                options.Authority = office365Config.AuthorizationEndpoint;          // Common Auth Login https://login.microsoftonline.com/common/v2.0/ URL is preferred\n                options.TokenValidationParameters = new TokenValidationParameters { ValidateIssuer = false }; // Needs to be set in case of the Common Auth Login URL\n                options.ResponseType = \"code id_token\";\n                options.GetClaimsFromUserInfoEndpoint = true;\n                options.SaveTokens = true;\n                options.CallbackPath = \"/oidc-signin\"; \n                \n                foreach (var scope in office365Scopes)\n                {\n                    options.Scope.Add(scope);\n                }\n            });\n</code></pre></div></div>\n\n<p>The “office365config” contains the basic OpenId Connect configuration entries like ClientId and ClientSecret and the needed scopes.</p>\n\n<p>Unfortunatly with this configuration we couldn’t login to our system, because after we successfully signed in to the Microsoft Account this error occured:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>System.Exception: An error was encountered while handling the remote login. ---&gt; System.Exception: Unknown response type: text/html\n   --- End of inner exception stack trace ---\n   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\n   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.HandleRequestAsync() in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Hosting\\FederatedSignOut\\AuthenticationRequestHandlerWrapper.cs:line 38\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)\n   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\\local\\identity\\server4\\IdentityServer4\\src\\IdentityServer4\\src\\Hosting\\BaseUrlMiddleware.cs:line 36\n   at Microsoft.AspNetCore.Server.IIS.Core.IISHttpContextOfT`1.ProcessRequestAsync()\n</code></pre></div></div>\n\n<h1 id=\"fix\">Fix</h1>\n\n<p>After some code research I found the problematic code:</p>\n\n<p>We just needed to disable “<strong>GetClaimsFromUserInfoEndpoint</strong>” and everything worked. I’m not sure why we the error occured, because this code was more or less untouched a couple of month and worked as intended. I’m not even sure what “GetClaimsFromUserInfoEndpoint” really does in the combination with a Microsoft Account.</p>\n\n<p>I wasted one or two hours with this behavior and maybe this will help someone in the future. If someone knows why this happend: Use the comment section or write me an email :)</p>\n\n<p>Full code:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>   services.AddAuthentication()\n                .AddOpenIdConnect(office365Config.Id, office365Config.Caption, options =&gt;\n                {\n                    options.SignInScheme = IdentityServerConstants.ExternalCookieAuthenticationScheme;\n                    options.SignOutScheme = IdentityServerConstants.SignoutScheme;\n                    options.ClientId = office365Config.MicrosoftAppClientId;            // Client-Id from the AppRegistration \n                    options.ClientSecret = office365Config.MicrosoftAppClientSecret;  // Client-Secret from the AppRegistration \n                    options.Authority = office365Config.AuthorizationEndpoint;        // Common Auth Login https://login.microsoftonline.com/common/v2.0/ URL is preferred\n                    options.TokenValidationParameters = new TokenValidationParameters { ValidateIssuer = false }; // Needs to be set in case of the Common Auth Login URL\n                    options.ResponseType = \"code id_token\";\n                    // Don't enable the UserInfoEndpoint, otherwise this may happen\n                    // An error was encountered while handling the remote login. ---&gt; System.Exception: Unknown response type: text/html\n                    // at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync()\n                    options.GetClaimsFromUserInfoEndpoint = false; \n                    options.SaveTokens = true;\n                    options.CallbackPath = \"/oidc-signin\"; \n                    \n                    foreach (var scope in office365Scopes)\n                    {\n                        options.Scope.Add(scope);\n                    }\n                });\n</code></pre></div></div>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/10/13/identityserver-azure-ad-login-and-unknown-response-type-texthtml/","RawContent":null},{"Title":"Enforce Administrator mode for builded dotnet exe applications","PublishedOn":"2019-09-30T18:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"the-problem\">The problem</h1>\n\n<p>Let’s say you have a .exe application builded from Visual Studio and the application always needs to be run from an administrator account. Windows Vista introduced the “User Account Control” (UAC) and such applications are marked with a special “shield” icon like this:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-09-30/uac.png\" alt=\"x\" title=\"UAC\" /></p>\n\n<p><strong>TL;DR-version:</strong></p>\n\n<p>To build such an .exe you just need to add a __“application.manifest” and request the needed permission like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;requestedExecutionLevel  level=\"requireAdministrator\" uiAccess=\"false\" /&gt;\n</code></pre></div></div>\n\n<h1 id=\"step-by-step-for-net-framework-apps\">Step by Step for .NET Framework apps</h1>\n\n<p>Create your WPF, WinForms or Console project and add a application manifest file:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-09-30/app-manifest.png\" alt=\"x\" title=\"application manifest\" /></p>\n\n<p>The file itself has quite a bunch of comments in it and you just need to replace</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;requestedExecutionLevel level=\"asInvoker\" uiAccess=\"false\" /&gt;\n</code></pre></div></div>\n\n<p>with</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;requestedExecutionLevel  level=\"requireAdministrator\" uiAccess=\"false\" /&gt;\n</code></pre></div></div>\n\n<p>… and you are done.</p>\n\n<h1 id=\"step-by-step-for-net-core-apps\">Step by Step for .NET Core apps</h1>\n\n<p>The same approach works more or less for .NET Core 3 apps:</p>\n\n<p>Add a “application manifest file”, change the requestedExecutionLevel and it should “work”</p>\n\n<p><em>Be aware:</em> For some unkown reasons the default name for the application manifest file will be “app1.manifest”. If you rename the file to “app.manifest”, make sure your .csproj is updated as well:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;OutputType&gt;Exe&lt;/OutputType&gt;\n    &lt;TargetFramework&gt;netcoreapp3.0&lt;/TargetFramework&gt;\n    &lt;ApplicationManifest&gt;app.manifest&lt;/ApplicationManifest&gt;\n  &lt;/PropertyGroup&gt;\n\n&lt;/Project&gt;\n</code></pre></div></div>\n\n<p>Hope this helps!</p>\n\n<p>View the <a href=\"https://github.com/Code-Inside/Samples/tree/master/2019/NetCoreAdminTest\"><strong>source code on GitHub</strong></a>.</p>\n","Href":"https://blog.codeinside.eu/2019/09/30/enforce-administrator-mode-for-builded-dotnet-exe/","RawContent":null},{"Title":"Check installed version for ASP.NET Core on Windows IIS with Powershell","PublishedOn":"2019-08-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"the-problem\">The problem</h1>\n\n<p>Let’s say you have a ASP.NET Core application <strong>without</strong> the bundled ASP.NET Core runtime (e.g. to keep the download as small as possible) and you want to run your ASP.NET Core application on a Windows Server hosted by IIS.</p>\n\n<h1 id=\"general-approach\">General approach</h1>\n\n<p>The general approach is the following: Install the <a href=\"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/index?view=aspnetcore-2.2#install-the-net-core-windows-server-hosting-bundle\">.NET Core hosting bundle</a> and you are done.</p>\n\n<p>Each .NET Core Runtime (and there are quite a bunch of <a href=\"https://dotnet.microsoft.com/download/dotnet-core/2.2\">them</a>) is backward compatible (at least the 2.X runtimes), so if you have installed 2.2.6, your app (created while using the .NET runtime 2.2.1), still runs.</p>\n\n<h1 id=\"why-check-the-minimum-version\">Why check the minimum version?</h1>\n\n<p>Well… in theory the app itself (at least for .NET Core 2.X applications) may run under runtime versions, but each version might fix something and to keep things safe it is a good idea to enforce security updates.</p>\n\n<h1 id=\"check-for-minimum-requirement\">Check for minimum requirement</h1>\n\n<p>I stumbled upon this <a href=\"https://stackoverflow.com/questions/38567796/how-to-determine-if-asp-net-core-has-been-installed-on-a-windows-server\">Stackoverflow question/answer</a> and enhanced the script, because that version only tells you “ASP.NET Core seems to be installed”. My enhanced version searchs for a minimum required version and if this is not installed, it exit the script.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$DotNetCoreMinimumRuntimeVersion = [System.Version]::Parse(\"2.2.5.0\")\n\n$DotNETCoreUpdatesPath = \"Registry::HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Updates\\.NET Core\"\n$DotNetCoreItems = Get-Item -ErrorAction Stop -Path $DotNETCoreUpdatesPath\n$MinimumDotNetCoreRuntimeInstalled = $False\n\n$DotNetCoreItems.GetSubKeyNames() | Where { $_ -Match \"Microsoft .NET Core.*Windows Server Hosting\" } | ForEach-Object {\n\n                $registryKeyPath = Get-Item -Path \"$DotNETCoreUpdatesPath\\$_\"\n\n                $dotNetCoreRuntimeVersion = $registryKeyPath.GetValue(\"PackageVersion\")\n\n                $dotNetCoreRuntimeVersionCompare = [System.Version]::Parse($dotNetCoreRuntimeVersion)\n\n                if($dotNetCoreRuntimeVersionCompare -ge $DotNetCoreMinimumRuntimeVersion) {\n                                Write-Host \"The host has installed the following .NET Core Runtime: $_ (MinimumVersion requirement: $DotNetCoreMinimumRuntimeVersion)\"\n                                $MinimumDotNetCoreRuntimeInstalled = $True\n                }\n}\n\nif ($MinimumDotNetCoreRuntimeInstalled -eq $False) {\n                Write-host \".NET Core Runtime (MiniumVersion $DotNetCoreMinimumRuntimeVersion) is required.\" -foreground Red\n                exit\n}\n</code></pre></div></div>\n\n<p>The “most” interesting part is the first line, where we set the minimum required version.</p>\n\n<p>If you have installed a version of the .NET Core runtime on Windows, this information will end up in the registry like this:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-08-31/registry.png\" alt=\"x\" title=\"Registry view\" /></p>\n\n<p>Now we just need to compare the installed version with the existing version and know if we are good to go.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/08/31/check-installed-version-for-aspnetcore-on-windows-iis-with-powershell/","RawContent":null},{"Title":"SQL Server, Named Instances & the Windows Firewall","PublishedOn":"2019-07-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"the-problem\">The problem</h1>\n\n<p><em>“Cannot connect to sql\\instance. A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SQL Network Interfaces, error: 26 - Error Locating Server/Instance Specified) (Microsoft SQL Server, Error: -1)”</em></p>\n\n<p>Let’s say we have a system with a running SQL Server (Express or Standard Edition - doesn’t matter) and want to connect to this database from another machine. The chances are high that you will see the above error message.</p>\n\n<p><strong>Be aware:</strong> You can customize more or less anything, so this blogposts does only cover a very “common” installation.</p>\n\n<p>I struggled last week with this problem and I learned that this is a pretty “old” issue. To enlighten my dear readers I made the following checklist:</p>\n\n<h1 id=\"checklist\">Checklist:</h1>\n\n<ul>\n  <li>Does the SQL Server allow remote connections?</li>\n  <li>Does the SQL Server allow your authentication schema of choice (Windows or SQL Authentication)?</li>\n  <li>Check the “SQL Server Configuration Manager” if the needed TCP/IP protocol is enabled for your SQL Instance.</li>\n  <li>Check if the “SQL Server Browser”-Service is running</li>\n  <li>Check your Windows Firewall (see details below!)</li>\n  <li>This is a weird one, but try to add the Port to the ConnectionString, e.g. <code class=\"language-plaintext highlighter-rouge\">Data Source=MyServer\\Instance,1434</code>. This is not always needed, but I had one case, where each point on this list was OK, but I couldn’t connect from a client without the port.</li>\n</ul>\n\n<h2 id=\"windows-firewall-settings\">Windows Firewall settings:</h2>\n\n<p>Per default SQL Server uses TCP Port 1433 which is the minimum requirement without any special needs - use this command:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>netsh advfirewall firewall add rule name = SQLPort dir = in protocol = tcp action = allow localport = 1433 remoteip = localsubnet profile = DOMAIN,PRIVATE,PUBLIC\n</code></pre></div></div>\n\n<p>If you use <strong>named instances</strong> we need (at least) two additional ports:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>netsh advfirewall firewall add rule name = SQLPortUDP dir = in protocol = udp action = allow localport = 1434 remoteip = localsubnet profile = DOMAIN,PRIVATE,PUBLIC\n</code></pre></div></div>\n\n<p>This UDP Port 1434 is used to query the real TCP port for the named instance.</p>\n\n<p>Now the most important part: The SQL Server will use a (kind of) random dynamic port for the named instance. To avoid this behavior (which is really a killer for Firewall settings) you can set a fixed port in the <strong>SQL Server Configuration Manager</strong>.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SQL Server Configuration Manager -&gt; Instance -&gt; TCP/IP Protocol (make sure this is \"enabled\") -&gt; *Details via double click* -&gt; Under IPAll set a fixed port under \"TCP Port\", e.g. 1435\n</code></pre></div></div>\n\n<p>After this configuration, allow this port to communicate to the world with this command:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>netsh advfirewall firewall add rule name = SQLPortInstance dir = in protocol = tcp action = allow localport = 1435 remoteip = localsubnet profile = DOMAIN,PRIVATE,PUBLIC\n</code></pre></div></div>\n\n<p>(Thanks <a href=\"https://dba.stackexchange.com/a/107766\">Stackoverflow</a>!)</p>\n\n<p>Check the <a href=\"https://docs.microsoft.com/en-us/sql/sql-server/install/configure-the-windows-firewall-to-allow-sql-server-access\">official Microsoft Docs</a> for further information on this topic, but these commands helped me to connect to my SQL Server.</p>\n\n<p>The “dynamic” port was my main problem - after some hours of Googling I found the answer on Stackoverflow and I could establish a connection to my SQL Server with the SQL Server Management Studio.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/07/31/sql-server-named-instances-and-the-windows-firewall/","RawContent":null},{"Title":"Jint: Invoke Javascript from .NET","PublishedOn":"2019-06-30T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>If you ever dreamed to use Javascript in your .NET application there is a simple way: Use <strong><a href=\"https://github.com/sebastienros/jint\">Jint</a></strong>.</p>\n\n<p>Jint implements the ECMA 5.1 spec and can be use from any .NET implementation (Xamarin, .NET Framework, .NET Core). Just use the <a href=\"https://www.nuget.org/packages/Jint/\">NuGet package</a> and has <strong>no</strong> dependencies to other stuff - it’s a single .dll and you are done!</p>\n\n<h2 id=\"why-should-integrate-javascript-in-my-application\">Why should integrate Javascript in my application?</h2>\n\n<p>In our product “OneOffixx” we use Javascript as a scripting language with some “OneOffixx” specific objects.</p>\n\n<p>The pro arguments for Javascript:</p>\n\n<ul>\n  <li>It’s a well known language (even with all the brainfuck in it)</li>\n  <li>You can sandbox it quite simple</li>\n  <li>With a library like Jint it is super simple to interate</li>\n</ul>\n\n<p>I highly recommend to checkout the GitHub page, but here a some simple examples, which should show how to use it:</p>\n\n<h2 id=\"example-1-simple-start\">Example 1: Simple start</h2>\n\n<p>After the NuGet action you can use the following code to see one of the most basic implementations:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>public static void SimpleStart()\n{\n    var engine = new Jint.Engine();\n    Console.WriteLine(engine.Execute(\"1 + 2 + 3 + 4\").GetCompletionValue());\n}\n</code></pre></div></div>\n\n<p>We create a new “Engine” and execute some simple Javascript and returen the completion value - easy as that!</p>\n\n<h2 id=\"example-2-use-c-function-from-javascript\">Example 2: Use C# function from Javascript</h2>\n\n<p>Let’s say we want to provide a scripting environment and the script can access some C# based functions. This “bridge” is created via the “Engine” object. We create a value, which points to our C# implementation.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>public static void DefinedDotNetApi()\n{\n    var engine = new Jint.Engine();\n\n    engine.SetValue(\"demoJSApi\", new DemoJavascriptApi());\n\n    var result = engine.Execute(\"demoJSApi.helloWorldFromDotNet('TestTest')\").GetCompletionValue();\n\n    Console.WriteLine(result);\n}\n\npublic class DemoJavascriptApi\n{\n    public string helloWorldFromDotNet(string name)\n\n    {\n        return $\"Hello {name} - this is executed in {typeof(Program).FullName}\";\n    }\n}\n</code></pre></div></div>\n\n<h2 id=\"example-3-use-javascript-from-c\">Example 3: Use Javascript from C#</h2>\n\n<p>Of course we also can do the other way around:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>public static void InvokeFunctionFromDotNet()\n{\n    var engine = new Engine();\n\n    var fromValue = engine.Execute(\"function jsAdd(a, b) { return a + b; }\").GetValue(\"jsAdd\");\n\n    Console.WriteLine(fromValue.Invoke(5, 5));\n\n    Console.WriteLine(engine.Invoke(\"jsAdd\", 3, 3));\n}\n</code></pre></div></div>\n\n<h2 id=\"example-4-use-a-common-javascript-library\">Example 4: Use a common Javascript library</h2>\n\n<p>Jint allows you to inject any Javascript code (be aware: There is no DOM, so only “libraries” can be used).</p>\n\n<p>In this example we use <a href=\"https://handlebarsjs.com/\">handlebars.js</a>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>public static void Handlebars()\n{\n    var engine = new Jint.Engine();\n\n    engine.Execute(File.ReadAllText(\"handlebars-v4.0.11.js\"));\n\n    engine.SetValue(\"context\", new\n    {\n        cats = new[]\n        {\n            new {name = \"Feivel\"},\n            new {name = \"Lilly\"}\n        }\n    });\n\n    engine.SetValue(\"source\", \"  says meow!!!\\n\");\n\n    engine.Execute(\"var template = Handlebars.compile(source);\");\n\n    var result = engine.Execute(\"template(context)\").GetCompletionValue();\n\n    Console.WriteLine(result);\n}\n</code></pre></div></div>\n\n<h2 id=\"example-5-repl\">Example 5: REPL</h2>\n\n<p>If you are crazy enough, you can build a simple REPL like this (not sure if this would be a good idea for production, but it works!)</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>public static void Repl()\n{\n    var engine = new Jint.Engine();\n\n    while (true)\n    {\n        Console.Write(\"&gt; \");\n        var statement = Console.ReadLine();\n        var result = engine.Execute(statement).GetCompletionValue();\n        Console.WriteLine(result);\n    }\n}\n</code></pre></div></div>\n\n<h2 id=\"jint-javascript-integration-done-right\">Jint: Javascript integration done right!</h2>\n\n<p>As you can see: Jint is quite powerfull and if you feel the need to integrate Javascript in your application, checkout Jint!</p>\n\n<p>The sample code can be found <a href=\"https://github.com/Code-Inside/Samples/tree/master/2018/JintSample/JintPlayground\">here </a>.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/06/30/jint-invoke-javascript-from-dotnet/","RawContent":null},{"Title":"Build Windows Server 2016 Docker Images under Windows Server 2019","PublishedOn":"2019-05-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>Since the uprising of Docker on Windows we also invested some time into it and packages our OneOffixx server side stack in a Docker image.</p>\n\n<p><strong>Windows Server 2016 situation:</strong></p>\n\n<p>We rely on Windows Docker Images, because we still have some “legacy” parts that requires the full .NET Framework, thats why we are using this base image:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>FROM microsoft/aspnet:4.7.2-windowsservercore-ltsc2016\n</code></pre></div></div>\n\n<p>As you can already guess: This is based on a Windows Server 2016 and besides the “legacy” parts of our application, we need to support Windows Server 2016, because Windows Server 2019 is currently not available on our customer systems.</p>\n\n<p>In our build pipeline we could easily invoke Docker and build our images based on the LTSC 2016 base image and everything was “fine”.</p>\n\n<p><strong>Problem: Move to Windows Server 2019</strong></p>\n\n<p>Some weeks ago my collegue updated our Azure DevOps Build servers from Windows Server 2016 to Windows Server 2019 and our builds began to fail.</p>\n\n<p><strong>Solution: Hyper-V isolation!</strong></p>\n\n<p>After some internet research this site popped up: <a href=\"https://docs.microsoft.com/en-us/virtualization/windowscontainers/deploy-containers/version-compatibility\">Windows container version compatibility\n</a></p>\n\n<p>Microsoft made some great enhancements to Docker in Windows Server 2019, but if you need to “support” older versions, you need to take care of it, which means:</p>\n\n<p>If you have a Windows Server 2019, but want to use Windows Server 2016 base images, you need to activate <a href=\"https://docs.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/hyperv-container\">Hyper-V isolation</a>.</p>\n\n<p>Example from our own cake build script:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>var exitCode = StartProcess(\"Docker\", new ProcessSettings { Arguments = \"build -t \" + dockerImageName + \" . --isolation=hyperv\", WorkingDirectory = packageDir});\n</code></pre></div></div>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/05/31/build-windows-2016-docker-images-under-windows-2019/","RawContent":null},{"Title":"Update OnPrem TFS 2018 to AzureDevOps Server 2019","PublishedOn":"2019-04-30T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<p>We recently updated our OnPrem TFS 2018 installation to the newest release: <strong><a href=\"https://azure.microsoft.com/en-us/services/devops/server/\">Azure DevOps Server</a></strong></p>\n\n<p>The product has the same core features as TFS 2018, but with a new UI and other improvements. For a full list you should read the <a href=\"https://docs.microsoft.com/en-us/azure/devops/server/release-notes/azuredevops2019?view=azure-devops\">Release Notes</a>.</p>\n\n<p>*Be aware: This is the <strong>OnPrem</strong> solution, even with the slightly missleading name “Azure DevOps Server”. If you are looking for the <strong>Cloud</strong> solution you should read the <a href=\"https://azure.microsoft.com/en-us/services/devops/migrate/\">Migration-Guide</a>.</p>\n\n<h1 id=\"updating-a-tfs-2018-installation\">“Updating” a TFS 2018 installation</h1>\n\n<p>Our setup is quite simple: One server for the “Application Tier” and another SQL database server for the “Data Tier”. \nThe “Data Tier” was already running with SQL Server 2016 (or above), so we only needed to touch the “Application Tier”.</p>\n\n<h1 id=\"application-tier-update\">Application Tier Update</h1>\n\n<p>In our TFS 2018 world the “Application Tier” was running on a Windows Server 2016, but we decided to create a new (clean) server with Windows Server 2019 and doing a “clean” Azure DevOps Server install, but pointing to the existing “Data Tier”.</p>\n\n<p>In theory it is quite possible to update the actual TFS 2018 installation, but because “new is always better”, we also switched the underlying OS.</p>\n\n<h1 id=\"update-process\">Update process</h1>\n\n<p>The actual update was really easy. We did a “test run” with a copy of the database and everything worked as expected, so we reinstalled the Azure DevOps Server and run the update on the production data.</p>\n\n<h2 id=\"steps\">Steps:</h2>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/0.png\" alt=\"x\" title=\"Start\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/1.png\" alt=\"x\" title=\"Wizard\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/2.png\" alt=\"x\" title=\"Existing or new\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/3.png\" alt=\"x\" title=\"SQL instance\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/4.png\" alt=\"x\" title=\"Production update\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/5.png\" alt=\"x\" title=\"Service Account\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/6.png\" alt=\"x\" title=\"Settings\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/7.png\" alt=\"x\" title=\"Search Service\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/8.png\" alt=\"x\" title=\"Reporting\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/9.png\" alt=\"x\" title=\"Confirm\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/10.png\" alt=\"x\" title=\"Check\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/11.png\" alt=\"x\" title=\"Configuration\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/12.png\" alt=\"x\" title=\"Configuration done\" /></p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-04-30/13.png\" alt=\"x\" title=\"Success\" /></p>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>If you are running a TFS installation, don’t be afraid to do an update. The update itself was done in 10-15 minutes on our 30GB-ish database.</p>\n\n<p>Just download the setup from the <a href=\"https://azure.microsoft.com/en-us/services/devops/server/\">Azure DevOps Server</a> site (“Free trial…”) and you should be ready to go!</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/04/30/update-onprem-tfs-2018-to-azuredevops-server-2019/","RawContent":null},{"Title":"Load hierarchical data from MSSQL with recursive common table expressions","PublishedOn":"2019-03-31T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"scenario\">Scenario</h1>\n\n<p>We have a pretty simple scenario: We have a table with a simple Id + ParentId schema and some demo data in it. I have seen this design quite a lot in the past and in the relational database world this is the obvious choice.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-03-31/demo.png\" alt=\"x\" title=\"Demo table\" /></p>\n\n<h1 id=\"problem\">Problem</h1>\n\n<p>Each data entry is really simple to load or manipulate. Just load the target element and change the ParentId for a move action etc.. A more complex problem is how to load a whole “data tree”.\nLet’s say I want to load all children or parents of a given Id. You could load everything, but if your dataset is large enough, this operation will work poorly and might kill your database.</p>\n\n<p>Another naive way would be to query this with code from a client application, but if your “tree” is big enough, it will consume lots of resources, because for each “level” you open a new connection etc.</p>\n\n<h1 id=\"recursive-common-table-expressions\">Recursive Common Table Expressions!</h1>\n\n<p>Our goal is to load the data in one go as effective as possible - <strong>without using Stored Procedures(!)</strong>. In the Microsoft SQL Server world we have this handy feature called “<a href=\"https://docs.microsoft.com/en-us/sql/t-sql/queries/with-common-table-expression-transact-sql\"><strong>common table expresions (CTE)</strong></a>”. \nA common table expression can be seen as a function inside a SQL statement. This function can be invoked by itself and now we can call this a “recursive common table expression”.</p>\n\n<p>The syntax itself is a bit odd, but works well and you can enhance it with JOINs from other tables.</p>\n\n<h2 id=\"scenario-a-from-child-to-parent\">Scenario A: From child to parent</h2>\n\n<p>Let’s say you want to go the tree upwards from a given Id:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>WITH RCTE AS\n    (\n    SELECT anchor.Id as ItemId, anchor.ParentId as ItemParentId, 1 AS Lvl, anchor.[Name]\n    FROM Demo anchor WHERE anchor.[Id] = 7\n    \n    UNION ALL\n    \n    SELECT nextDepth.Id  as ItemId, nextDepth.ParentId as ItemParentId, Lvl+1 AS Lvl, nextDepth.[Name]\n    FROM Demo nextDepth\n    INNER JOIN RCTE recursive ON nextDepth.Id = recursive.ItemParentId\n    )\n                                    \nSELECT ItemId, ItemParentId, Lvl, [Name]\nFROM RCTE as hierarchie\n</code></pre></div></div>\n\n<p>The <em>anchor.[Id] = 7</em> is our starting point and should be given as a SQL parameter. The <em>with</em> statement starts our function description, which we called “RCTE”.\nIn the first select we just load everything from the target element. \nNote, that we add a “Lvl” property, which starts at 1. \nThe <em>UNION ALL</em> is needed (at least we were not 100% if there are other options).\nIn the next line we are doing a join based on the <em>Id = ParentId</em> schema and we increase the “Lvl” property for each level. \nThe last line inside the common table expression uses the “recursive” feature.</p>\n\n<p>Now we are done and can use the CTE like a normal table in our final statement.</p>\n\n<p>Result:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-03-31/up.png\" alt=\"x\" title=\"Child to Parent\" /></p>\n\n<p>We now only load the “path” from the child entry up to the root entry.</p>\n\n<p>If you ask why we introduce the “lvl” column:\nWith this column it is really easy see each “step” and it might come handy in your client application.</p>\n\n<h2 id=\"scenario-b-from-parent-to-all-descendants\">Scenario B: From parent to all descendants</h2>\n\n<p>With a small change we can do the other way around. Loading all descendants from a given id.</p>\n\n<p>The logic itself is more or less identical, we changed only the <em>INNER JOIN RCTE ON …</em></p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>WITH RCTE AS\n    (\n    SELECT anchor.Id as ItemId, anchor.ParentId as ItemParentId, 1 AS Lvl, anchor.[Name]\n    FROM Demo anchor WHERE anchor.[Id] = 2\n    \n    UNION ALL\n    \n    SELECT nextDepth.Id  as ItemId, nextDepth.ParentId as ItemParentId, Lvl+1 AS Lvl, nextDepth.[Name]\n    FROM Demo nextDepth\n    INNER JOIN RCTE recursive ON nextDepth.ParentId = recursive.ItemId\n    )\n                                    \nSELECT ItemId, ItemParentId, Lvl, [Name]\nFROM RCTE as hierarchie\n</code></pre></div></div>\n\n<p>Result:</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-03-31/down.png\" alt=\"x\" title=\"Parent to chid\" /></p>\n\n<p>In this example we only load all children from a given id. If you point this to the “root”, you will get everything except the “alternative root” entry.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>Working with trees in a relational database might not “feel” as good as in a document database, but it doesn’t mean, that such scenarios needs to perform bad. We use this code at work for some bigger datasets and it works really well for us.</p>\n\n<p><em>Thanks to my collegue Alex - he discovered this wild T-SQL magic.</em></p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/","RawContent":null},{"Title":"Check Scheduled Tasks with Powershell","PublishedOn":"2019-02-26T23:45:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"\n<h1 id=\"task-scheduler-via-powershell\">Task Scheduler via Powershell</h1>\n\n<p>Let’s say we want to know the latest result of the “GoogleUpdateTaskMachineCore” task and the corresponding actions.</p>\n\n<p><img src=\"https://blog.codeinside.eu/assets/md-images/2019-02-26/taskscheduler.png\" alt=\"x\" title=\"Task Scheduler\" /></p>\n\n<p>All you have to do is this (in a Run-As-Administrator Powershell console) :</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Get-ScheduledTask | where TaskName -EQ 'GoogleUpdateTaskMachineCore' | Get-ScheduledTaskInfo\n</code></pre></div></div>\n\n<p>The result should look like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>LastRunTime        : 2/26/2019 6:41:41 AM\nLastTaskResult     : 0\nNextRunTime        : 2/27/2019 1:02:02 AM\nNumberOfMissedRuns : 0\nTaskName           : GoogleUpdateTaskMachineCore\nTaskPath           : \\\nPSComputerName     :\n</code></pre></div></div>\n\n<p>Be aware that the “LastTaskResult” might be displayed as an integer. The full “result code list” <a href=\"https://docs.microsoft.com/en-us/windows/desktop/taskschd/task-scheduler-error-and-success-constants\">documentation</a> only lists the hex value, so you need to convert the number to hex.</p>\n\n<p>Now, if you want to access the corresponding actions you need to work with the “actual” task like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>PS C:\\WINDOWS\\system32&gt; $task = Get-ScheduledTask | where TaskName -EQ 'GoogleUpdateTaskMachineCore'\nPS C:\\WINDOWS\\system32&gt; $task.Actions\n\n\nId               :\nArguments        : /c\nExecute          : C:\\Program Files (x86)\\Google\\Update\\GoogleUpdate.exe\nWorkingDirectory :\nPSComputerName   :\n</code></pre></div></div>\n\n<p>If you want to dig deeper, just checkout all the properties:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>PS C:\\WINDOWS\\system32&gt; $task | Select *\n\n\nState                 : Ready\nActions               : {MSFT_TaskExecAction}\nAuthor                :\nDate                  :\nDescription           : Keeps your Google software up to date. If this task is disabled or stopped, your Google\n                        software will not be kept up to date, meaning security vulnerabilities that may arise cannot\n                        be fixed and features may not work. This task uninstalls itself when there is no Google\n                        software using it.\nDocumentation         :\nPrincipal             : MSFT_TaskPrincipal2\nSecurityDescriptor    :\nSettings              : MSFT_TaskSettings3\nSource                :\nTaskName              : GoogleUpdateTaskMachineCore\nTaskPath              : \\\nTriggers              : {MSFT_TaskLogonTrigger, MSFT_TaskDailyTrigger}\nURI                   : \\GoogleUpdateTaskMachineCore\nVersion               : 1.3.33.23\nPSComputerName        :\nCimClass              : Root/Microsoft/Windows/TaskScheduler:MSFT_ScheduledTask\nCimInstanceProperties : {Actions, Author, Date, Description...}\nCimSystemProperties   : Microsoft.Management.Infrastructure.CimSystemProperties\n</code></pre></div></div>\n\n<p>If you have worked with Powershell in the past this blogpost should “easy”, but it took me a while to see the result code and to check if the action was correct or not.</p>\n\n<p>Hope this helps!</p>\n","Href":"https://blog.codeinside.eu/2019/02/26/check-scheduled-tasks-with-powershell/","RawContent":null}],"ResultType":"Feed"},"O_Blog":{"FeedItems":[{"Title":"How to build a simple hate speech detector with machine learning","PublishedOn":"2019-08-02T13:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Not everybody on the internet behaves nice and some comments are just rude or offending. If you run a web page that offers a public comment function hate speech can be a real problem. For example in Germany, you are legally required to delete hate speech comments. This can be challenging if you have to check thousands of comments each day. \nSo wouldn’t it be nice, if you can automatically check the user’s comment and give them a little hint to stay nice?\n<!--description--></p>\n\n<p>The simplest thing you could do is to check if the user’s text contains offensive words. However, this approach is limited since you can offend people without using offensive words.</p>\n\n<p>This post will show you how to train a machine learning model that can detect if a comment or text is offensive. And to start you need just a few lines of Python code \\o/</p>\n\n<h2 id=\"the-data\">The Data</h2>\n\n<p>At first, you need data. In this case, you will need a list of offensive and nonoffensive texts. I wrote this tutorial for a machine learning course in Germany, so I used German texts but you should be able to use other languages too.</p>\n\n<p>For a machine learning competition, scientists provided a list of comments labeled as offensive and nonoffensive (<a href=\"https://projects.fzai.h-da.de/iggsa/projekt/\">Germeval 2018, Subtask 1</a>). This is perfect for us since we just can use this data.</p>\n\n<h2 id=\"the-code\">The Code</h2>\n\n<p>To tackle this task I would first establish a baseline and then improve this solution step by step. Luckily they also published the scores of all submission, so we can get a sense of how well we are doing.</p>\n\n<p>For our baseline model we are going to use <a href=\"https://fasttext.cc/\">Facebooks fastText</a>. It’s simple to use, works with many languages and does not require any special hardware like a GPU. Oh, and it’s fast :)</p>\n\n<h3 id=\"1-load-the-data\">1. Load the data</h3>\n\n<p>After you downloaded the training data file <a href=\"https://github.com/uds-lsv/GermEval-2018-Data\">germeval2018.training.txt</a> you need to transform this data into a format that fastText can read.\nFastTexts standard format looks like this “<strong>label</strong>[your label] some text”:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>__label__offensive some insults\n__label__other have a nice day\n</code></pre></div></div>\n\n<h3 id=\"2-train-the-model\">2. Train the Model</h3>\n\n<p>To train the model you need to install the fastText Python package.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>pip <span class=\"nb\">install </span>fasttext\n</code></pre></div></div>\n<p>To train the model you need just there line of code.</p>\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">fasttext</span>\n<span class=\"n\">traning_parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s\">'epoch'</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"s\">'lr'</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"s\">'loss'</span><span class=\"p\">:</span> <span class=\"s\">\"ns\"</span><span class=\"p\">,</span> <span class=\"s\">'thread'</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s\">'ws'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s\">'dim'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">}</span>    \n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">fasttext</span><span class=\"p\">.</span><span class=\"n\">supervised</span><span class=\"p\">(</span><span class=\"s\">'fasttext.train'</span><span class=\"p\">,</span> <span class=\"s\">'model'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">traning_parameters</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>I packed all the training parameters into a seperate dictionary. To me that looks a bit cleaner but you don’t need to do that.</p>\n\n<h3 id=\"3-test-your-model\">3. Test your Model</h3>\n\n<p>After we trained the model it is time to test how it performs. FastText provides us a handy test method the evaluate the model’s performance. To compare our model with the other models from the GermEval contest I also added a lambda which calculates the average <a href=\"https://en.wikipedia.org/wiki/F1_score\">F1 score</a>. For now, I did not use the official test script from the contests repository. Which you should do if you wanted to participate in such contests.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">):</span>\n    <span class=\"n\">f1_score</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">precision</span><span class=\"p\">,</span> <span class=\"n\">recall</span><span class=\"p\">:</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"p\">((</span><span class=\"n\">precision</span> <span class=\"o\">*</span> <span class=\"n\">recall</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">precision</span> <span class=\"o\">+</span> <span class=\"n\">recall</span><span class=\"p\">))</span>\n    <span class=\"n\">nexamples</span><span class=\"p\">,</span> <span class=\"n\">recall</span><span class=\"p\">,</span> <span class=\"n\">precision</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"p\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"s\">'fasttext.test'</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">f'recall: </span><span class=\"si\">{</span><span class=\"n\">recall</span><span class=\"si\">}</span><span class=\"s\">'</span> <span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">f'precision: </span><span class=\"si\">{</span><span class=\"n\">precision</span><span class=\"si\">}</span><span class=\"s\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">f'f1 score: </span><span class=\"si\">{</span><span class=\"n\">f1_score</span><span class=\"p\">(</span><span class=\"n\">precision</span><span class=\"p\">,</span><span class=\"n\">recall</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span> <span class=\"p\">(</span><span class=\"s\">f'number of examples: </span><span class=\"si\">{</span><span class=\"n\">nexamples</span><span class=\"si\">}</span><span class=\"s\">'</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>I don’t know about you, but I am so curious how we score. Annnnnnnd:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>recall: 0.7018686296715742\nprecision: 0.7018686296715742\nf1 score: 0.7018686296715742\nnumber of examples: 3532\n</code></pre></div></div>\n\n<p>Looking at the <a href=\"https://github.com/uds-lsv/GermEval-2018-Data/blob/master/results.pdf\">results</a> we can see that the best other model had an average F1 score of 76,77 and <strong>our model achieves -without any optimization and preprocessing- an F1 Score of 70.18.</strong></p>\n\n<p>This is pretty good since the models for these contests are usually specially optimized for the given data.</p>\n\n<p>FastText is a clever piece of software, that uses some neat tricks. If interested in fastText you should take a look the <a href=\"https://arxiv.org/abs/1607.04606\">paper</a> and <a href=\"https://arxiv.org/abs/1607.01759\">this one</a>. For example, fastText uses character n-grams. This approach is well suited for the German language, which uses a lot of compound words.</p>\n\n<h2 id=\"next-steps\">Next Steps</h2>\n\n<p>In this very basic tutorial, we trained a model with just a few lines of Python code. There are several things you can do to improve this model. The first step would be to preprocess your data. During preprocessing you could lower case all texts, remove URLs and special characters, correct spelling, etc. After every optimization step, you can test your model and check if your scores went up. Happy hacking :)</p>\n\n<p>Some Ideas:</p>\n\n<ol>\n  <li>Preprocess the data</li>\n  <li>Optimize the parameters (number of training epochs, learning rate, embedding dims, word n-grams)</li>\n  <li>Use pre-trained word vectors from the fastText website</li>\n  <li>add more data to the training set</li>\n  <li>Use data augmentation.</li>\n</ol>\n\n<p>Here is the full code:</p>\n\n<script src=\"https://gist.github.com/oliverguhr/31a1c93a1005d7e6e04c23d389d89cb7.js\"></script>\n\n<p>Credit: Photo by <a href=\"https://unsplash.com/photos/IYtVtgXw72M\">Jon Tyson on Unsplash</a></p>","Href":"https://www.oliverguhr.eu/nlp/jekyll/2019/08/02/build-a-simple-hate-speech-detector-with-machine-learning.html","RawContent":null}],"ResultType":"Feed"},"GitHubEventsUser":{"Events":[{"Id":"19872666482","Type":"IssuesEvent","CreatedAt":"2022-01-23T12:18:23","Actor":"oliverguhr","Repository":"oliverguhr/fullstop-deep-punctuation-prediction","Organization":null,"RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/oliverguhr/fullstop-deep-punctuation-prediction/issues/2","RelatedDescription":"Closed issue \"Publicliy available code\" (#2) at oliverguhr/fullstop-deep-punctuation-prediction","RelatedBody":"Hello, \r\nI've enjoyed reading your paper \"FullStop: Multilingual Deep Models for Punctuation Prediction\". \r\nIn the paper, you stated that your code is publicly available. But in the repo, I couldn't see it. Do you plan to share it?\r\n\r\nKind regards"},{"Id":"19773924243","Type":"IssuesEvent","CreatedAt":"2022-01-17T12:58:20","Actor":"oliverguhr","Repository":"huggingface/transformers","Organization":"huggingface","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/huggingface/transformers/issues/15177","RelatedDescription":"Opened issue \"processing texts longer than 512 tokens with token-classification pipeline \" (#15177) at huggingface/transformers","RelatedBody":"# 🚀 Feature request\r\n\r\nCurrently, the token-classification pipeline truncates input texts longer than 512 tokens. \r\nIt would be great if the pipeline could process texts of any length.\r\n\r\n## Motivation\r\n\r\nThis issue is a result of this feature request:\r\nhttps://github.com/huggingface/huggingface_hub/issues/532\r\n\r\nAs suggested I am tagging @Narsil here. \r\n\r\n## Your contribution\r\n\r\nFor my [punctuation prediction model](https://huggingface.co/oliverguhr/fullstop-punctuation-multilang-large), I wrote an inference code for this task.\r\nThis code segments a longer text into 512 tokens chunks with some overlap and \r\nreconstructs the final output string. The code however is rather complex and tailored to \r\nmy punctuation prediction use case. So I am not sure if this is useful here. \r\n"},{"Id":"19615588068","Type":"IssuesEvent","CreatedAt":"2022-01-06T20:39:21","Actor":"oliverguhr","Repository":"oliverguhr/wav2vec2-live","Organization":null,"RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/oliverguhr/wav2vec2-live/issues/6","RelatedDescription":"Closed issue \"How to improve the performance?\" (#6) at oliverguhr/wav2vec2-live","RelatedBody":"The default model that you shared in this repo, is for English. I checked the performance, it's not giving a good result.How to improve the model and reduce WER?"},{"Id":"19587114837","Type":"IssuesEvent","CreatedAt":"2022-01-05T08:32:54","Actor":"oliverguhr","Repository":"oliverguhr/wav2vec2-live","Organization":null,"RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/oliverguhr/wav2vec2-live/issues/5","RelatedDescription":"Closed issue \"offline mode feasibility\" (#5) at oliverguhr/wav2vec2-live","RelatedBody":"Please let me know whether this model will work in offline mode."},{"Id":"19363313034","Type":"IssuesEvent","CreatedAt":"2021-12-16T08:43:15","Actor":"oliverguhr","Repository":"pytorch/pytorch","Organization":"pytorch","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/pytorch/pytorch/issues/70036","RelatedDescription":"Opened issue \"ROCM device not found\" (#70036) at pytorch/pytorch","RelatedBody":"### 🐛 Describe the bug\n\nHello,\r\nI installed rocm  4.2 according to the documentation. The GPU is recognized by the rocm tooling. However, pytorch does not detect the GPU.\r\n\r\n\r\n```\r\n>>>import torch \r\n>>> torch.tensor([0]).to(\"cuda\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/oli/source/experiment/amd-test/venv/lib/python3.8/site-packages/torch/cuda/__init__.py\", line 214, in _lazy_init\r\n    torch._C._cuda_init()\r\nRuntimeError: No HIP GPUs are available\r\n```\r\n\r\n```\r\n>>>import torch \r\n>>>torch.tensor([0]).to(\"hip\")\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nRuntimeError: HIP error: hipErrorNoDevice\r\nHIP kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\r\nFor debugging consider passing HIP_LAUNCH_BLOCKING=1.\r\n```\r\n\r\n\r\n\r\n\r\n\n\n### Versions\n\nI am running Python 3.8.10. I installed pytorch in a virtual env today with this command:\r\n```\r\npip3 install torch torchvision==0.11.2 -f https://download.pytorch.org/whl/rocm4.2/torch_stable.html\r\n```\r\nROCM is at 4.2.0.40200-21\r\n```\r\n$apt show rocm-libs -a   \r\nPackage: rocm-libs\r\nVersion: 4.2.0.40200-21\r\n```\r\n\r\nunfortunately running collect_env.py fails with\r\n\r\n```\r\npython3 collect_env.py\r\nCollecting environment information...\r\nTraceback (most recent call last):\r\n  File \"collect_env.py\", line 469, in <module>\r\n    main()\r\n  File \"collect_env.py\", line 452, in main\r\n    output = get_pretty_env_info()\r\n  File \"collect_env.py\", line 447, in get_pretty_env_info\r\n    return pretty_str(get_env_info())\r\n  File \"collect_env.py\", line 309, in get_env_info\r\n    hip_runtime_version = [s.rsplit(None, 1)[-1] for s in cfg if 'HIP Runtime' in s][0]\r\nIndexError: list index out of range\r\n\r\n```\r\n\r\nrunning rocminfo gives me:\r\n\r\n```\r\nsudo /opt/rocm/bin/rocminfo\r\nROCk module is loaded\r\n=====================    \r\nHSA System Attributes    \r\n=====================    \r\nRuntime Version:         1.1\r\nSystem Timestamp Freq.:  1000.000000MHz\r\nSig. Max Wait Duration:  18446744073709551615 (0xFFFFFFFFFFFFFFFF) (timestamp count)\r\nMachine Model:           LARGE                              \r\nSystem Endianness:       LITTLE                             \r\n\r\n==========               \r\nHSA Agents               \r\n==========               \r\n*******                  \r\nAgent 1                  \r\n*******                  \r\n  Name:                    AMD Ryzen 7 1700 Eight-Core Processor\r\n  Uuid:                    CPU-XX                             \r\n  Marketing Name:          AMD Ryzen 7 1700 Eight-Core Processor\r\n  Vendor Name:             CPU                                \r\n  Feature:                 None specified                     \r\n  Profile:                 FULL_PROFILE                       \r\n  Float Round Mode:        NEAR                               \r\n  Max Queue Number:        0(0x0)                             \r\n  Queue Min Size:          0(0x0)                             \r\n  Queue Max Size:          0(0x0)                             \r\n  Queue Type:              MULTI                              \r\n  Node:                    0                                  \r\n  Device Type:             CPU                                \r\n  Cache Info:              \r\n    L1:                      32768(0x8000) KB                   \r\n  Chip ID:                 0(0x0)                             \r\n  Cacheline Size:          64(0x40)                           \r\n  Max Clock Freq. (MHz):   3000                               \r\n  BDFID:                   0                                  \r\n  Internal Node ID:        0                                  \r\n  Compute Unit:            16                                 \r\n  SIMDs per CU:            0                                  \r\n  Shader Engines:          0                                  \r\n  Shader Arrs. per Eng.:   0                                  \r\n  WatchPts on Addr. Ranges:1                                  \r\n  Features:                None\r\n  Pool Info:               \r\n    Pool 1                   \r\n      Segment:                 GLOBAL; FLAGS: FINE GRAINED        \r\n      Size:                    32877948(0x1f5ad7c) KB             \r\n      Allocatable:             TRUE                               \r\n      Alloc Granule:           4KB                                \r\n      Alloc Alignment:         4KB                                \r\n      Accessible by all:       TRUE                               \r\n    Pool 2                   \r\n      Segment:                 GLOBAL; FLAGS: KERNARG, FINE GRAINED\r\n      Size:                    32877948(0x1f5ad7c) KB             \r\n      Allocatable:             TRUE                               \r\n      Alloc Granule:           4KB                                \r\n      Alloc Alignment:         4KB                                \r\n      Accessible by all:       TRUE                               \r\n    Pool 3                   \r\n      Segment:                 GLOBAL; FLAGS: COARSE GRAINED      \r\n      Size:                    32877948(0x1f5ad7c) KB             \r\n      Allocatable:             TRUE                               \r\n      Alloc Granule:           4KB                                \r\n      Alloc Alignment:         4KB                                \r\n      Accessible by all:       TRUE                               \r\n  ISA Info:                \r\n*******                  \r\nAgent 2                  \r\n*******                  \r\n  Name:                    gfx803                             \r\n  Uuid:                    GPU-XX                             \r\n  Marketing Name:          AMD Radeon (TM) RX 480 Graphics    \r\n  Vendor Name:             AMD                                \r\n  Feature:                 KERNEL_DISPATCH                    \r\n  Profile:                 BASE_PROFILE                       \r\n  Float Round Mode:        NEAR                               \r\n  Max Queue Number:        128(0x80)                          \r\n  Queue Min Size:          4096(0x1000)                       \r\n  Queue Max Size:          131072(0x20000)                    \r\n  Queue Type:              MULTI                              \r\n  Node:                    1                                  \r\n  Device Type:             GPU                                \r\n  Cache Info:              \r\n    L1:                      16(0x10) KB                        \r\n  Chip ID:                 26591(0x67df)                      \r\n  Cacheline Size:          64(0x40)                           \r\n  Max Clock Freq. (MHz):   1310                               \r\n  BDFID:                   2048                               \r\n  Internal Node ID:        1                                  \r\n  Compute Unit:            36                                 \r\n  SIMDs per CU:            4                                  \r\n  Shader Engines:          4                                  \r\n  Shader Arrs. per Eng.:   1                                  \r\n  WatchPts on Addr. Ranges:4                                  \r\n  Features:                KERNEL_DISPATCH \r\n  Fast F16 Operation:      FALSE                              \r\n  Wavefront Size:          64(0x40)                           \r\n  Workgroup Max Size:      1024(0x400)                        \r\n  Workgroup Max Size per Dimension:\r\n    x                        1024(0x400)                        \r\n    y                        1024(0x400)                        \r\n    z                        1024(0x400)                        \r\n  Max Waves Per CU:        40(0x28)                           \r\n  Max Work-item Per CU:    2560(0xa00)                        \r\n  Grid Max Size:           4294967295(0xffffffff)             \r\n  Grid Max Size per Dimension:\r\n    x                        4294967295(0xffffffff)             \r\n    y                        4294967295(0xffffffff)             \r\n    z                        4294967295(0xffffffff)             \r\n  Max fbarriers/Workgrp:   32                                 \r\n  Pool Info:               \r\n    Pool 1                   \r\n      Segment:                 GLOBAL; FLAGS: COARSE GRAINED      \r\n      Size:                    8388608(0x800000) KB               \r\n      Allocatable:             TRUE                               \r\n      Alloc Granule:           4KB                                \r\n      Alloc Alignment:         4KB                                \r\n      Accessible by all:       FALSE                              \r\n    Pool 2                   \r\n      Segment:                 GROUP                              \r\n      Size:                    64(0x40) KB                        \r\n      Allocatable:             FALSE                              \r\n      Alloc Granule:           0KB                                \r\n      Alloc Alignment:         0KB                                \r\n      Accessible by all:       FALSE                              \r\n  ISA Info:                \r\n    ISA 1                    \r\n      Name:                    amdgcn-amd-amdhsa--gfx803          \r\n      Machine Models:          HSA_MACHINE_MODEL_LARGE            \r\n      Profiles:                HSA_PROFILE_BASE                   \r\n      Default Rounding Mode:   NEAR                               \r\n      Default Rounding Mode:   NEAR                               \r\n      Fast f16:                TRUE                               \r\n      Workgroup Max Size:      1024(0x400)                        \r\n      Workgroup Max Size per Dimension:\r\n        x                        1024(0x400)                        \r\n        y                        1024(0x400)                        \r\n        z                        1024(0x400)                        \r\n      Grid Max Size:           4294967295(0xffffffff)             \r\n      Grid Max Size per Dimension:\r\n        x                        4294967295(0xffffffff)             \r\n        y                        4294967295(0xffffffff)             \r\n        z                        4294967295(0xffffffff)             \r\n      FBarrier Max Size:       32                                 \r\n*** Done ***   \r\n```"},{"Id":"19218399003","Type":"IssuesEvent","CreatedAt":"2021-12-07T11:55:40","Actor":"oliverguhr","Repository":"davisking/dlib","Organization":null,"RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/davisking/dlib/issues/2469","RelatedDescription":"Closed issue \"import dlib fails on macosx arm64\" (#2469) at davisking/dlib","RelatedBody":"Hello,\r\nimporting dlib 19.22.1 fails with following error message. If I build dlib from source the import fails with the same error message.\r\n\r\n```\r\nImportError: dlopen(/venv/lib/python3.8/site-packages/_dlib_pybind11.cpython-38-darwin.so, 0x0002): \r\nsymbol not found in flat namespace '_png_do_expand_palette_rgb8_neon'\r\n```\r\n\r\n## Steps to Reproduce\r\n\r\n```\r\n$ pip install dlib\r\nCollecting dlib\r\n  Using cached dlib-19.22.1-cp38-cp38-macosx_12_0_arm64.whl\r\nInstalling collected packages: dlib\r\nSuccessfully installed dlib-19.22.1\r\n```\r\n```\r\n$ python \r\nPython 3.8.9 (default, Aug  3 2021, 19:21:54) \r\n[Clang 13.0.0 (clang-1300.0.29.3)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\n>> import dlib\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/venv/lib/python3.8/site-packages/dlib/__init__.py\", line 19, in <module>\r\n    from _dlib_pybind11 import *\r\nImportError: dlopen(/venv/lib/python3.8/site-packages/_dlib_pybind11.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '_png_do_expand_palette_rgb8_neon'\r\n```\r\n\r\n* **Version**: 19.22.1 \r\n* **Where did you get dlib**:installed via pip\r\n* **Platform**: MacOSX M1\r\n* **Compiler**: Apple clang version 13.0.0\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1484246261893148675","CreatedAt":"2022-01-20T19:27:39+00:00","UserScreenname":"robert0muehsig","Text":"Wtf. https://t.co/juBxYhQAAR","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null},{"Id":"1483787357363052554","CreatedAt":"2022-01-19T13:04:08+00:00","UserScreenname":"robert0muehsig","Text":"Developing enterprise software is nice, but dealing with enterprise stuff is... well... TIL: https://t.co/hTor6pzd9t","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null},{"Id":"1464177366008274944","CreatedAt":"2021-11-26T10:21:01+00:00","UserScreenname":"oliverguhr","Text":"Hausarzt und Facharzt vergeben keine Impftermine. Die Impfaktion in der Hochschule wurde abgesagt. In Dresden gibt… https://t.co/q5KMvPTyd1","Source":"<a href=\"https://mobile.twitter.com\" rel=\"nofollow\">Twitter Web App</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"1463154674039758851","CreatedAt":"2021-11-23T14:37:13+00:00","UserScreenname":"oliverguhr","Text":"Our punctuation model is now available at @huggingface Model hub. It can restore punctuation marks in 4 different l… https://t.co/7KDGeiDENW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":265,"FavoriteCount":43,"RawContent":null},{"Id":"831405475858112512","CreatedAt":"2017-02-14T07:31:26+00:00","UserScreenname":"CodeInsideBlog","Text":"Blogged: Create NuGet packages with Cake https://t.co/zpOCwViCNT","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"829218338270228480","CreatedAt":"2017-02-08T06:40:32+00:00","UserScreenname":"CodeInsideBlog","Text":"Build &amp; run xUnit tests with Cake https://t.co/vfX3X5PNVb #dotnet #cake","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"798442723741147136","CreatedAt":"2016-11-15T08:29:14+00:00","UserScreenname":"CodeInsideBlog","Text":"Enable SSL with custom domains on @GitHub Pages via @Cloudflare https://t.co/SLfVDexgcR #ssl #Encrypt","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"793351192109809664","CreatedAt":"2016-11-01T07:17:18+00:00","UserScreenname":"CodeInsideBlog","Text":"Writing loops in T-SQL https://t.co/E9oU0EtQnf #mssql #sql","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null},{"Id":"782821247948361728","CreatedAt":"2016-10-03T05:55:04+00:00","UserScreenname":"CodeInsideBlog","Text":"Lets convert a WPF app to UWP\n https://t.co/hqUIpCRKaC #UWP #Win10","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"712894405204643840","CreatedAt":"2016-03-24T06:50:45+00:00","UserScreenname":"CodeInsideBlog","Text":"Debugging .NET based Windows Error Reports (WER) https://t.co/xzvI282e1N","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":8,"FavoriteCount":7,"RawContent":null},{"Id":"709284615916294144","CreatedAt":"2016-03-14T07:46:44+00:00","UserScreenname":"CodeInsideBlog","Text":"XML Autocompletion with AvalonEdit https://t.co/ntJBGY30oo","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"706760908752740352","CreatedAt":"2016-03-07T08:38:26+00:00","UserScreenname":"CodeInsideBlog","Text":"Parsing XML Schemas in .NET https://t.co/a8wfhgAYlv","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":1,"FavoriteCount":2,"RawContent":null},{"Id":"706424357019582464","CreatedAt":"2016-03-06T10:21:06+00:00","UserScreenname":"CodeInsideBlog","Text":"Using FontAwesome in #UWP apps https://t.co/DXFCjpE6VL #Windows #Win10Dev // cc @__charri","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":1,"FavoriteCount":0,"RawContent":null},{"Id":"705644869385990146","CreatedAt":"2016-03-04T06:43:41+00:00","UserScreenname":"CodeInsideBlog","Text":"Using Travis CI for GitHub Pages builds https://t.co/dNmJ39LBzU","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"705288260424232960","CreatedAt":"2016-03-03T07:06:39+00:00","UserScreenname":"CodeInsideBlog","Text":"ExpensiveMeeting - a Universal Windows Platform OSS app using Template10 https://t.co/5ctyIhVUnQ #UWP #OSS #Meetings","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":1,"FavoriteCount":0,"RawContent":null},{"Id":"702376436947161088","CreatedAt":"2016-02-24T06:16:06+00:00","UserScreenname":"CodeInsideBlog","Text":"Shipping Visual C++ 2015 redistributable DLLs with your app or how to do an app-local deployment https://t.co/0PDeUDmNpv","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"694210642908180486","CreatedAt":"2016-02-01T17:28:09+00:00","UserScreenname":"CodeInsideBlog","Text":"Working with FontIcons in #UWP https://t.co/XLkWIQpfx2","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"683893416204316673","CreatedAt":"2016-01-04T06:11:11+00:00","UserScreenname":"CodeInsideBlog","Text":"Serving embedded resources with #ASPNET #WebApi https://t.co/CSu0btGF8N","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null},{"Id":"671587232478838785","CreatedAt":"2015-12-01T07:10:48+00:00","UserScreenname":"CodeInsideBlog","Text":"Working with JumpLists in #WPF Apps https://t.co/kqm3K8Y3Vf #Windows","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"658538752588034048","CreatedAt":"2015-10-26T07:00:48+00:00","UserScreenname":"CodeInsideBlog","Text":"XML deserialize to abstract class, interface or base class https://t.co/cilTqdQjkb","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"638235807048966144","CreatedAt":"2015-08-31T06:24:08+00:00","UserScreenname":"CodeInsideBlog","Text":"FAKE: Running MSTest Tests with FAKE without knowing a tiny bit of F# http://t.co/PgMVGq2yKR #Fake #MSTest #YeahIKnowItsMSTest","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":1,"RawContent":null},{"Id":"631389692076933121","CreatedAt":"2015-08-12T09:00:07+00:00","UserScreenname":"CodeInsideBlog","Text":"Reg.exe or how to import .reg files without admin privileges http://t.co/qwEjgFLEaL","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null},{"Id":"631389631880253440","CreatedAt":"2015-08-12T08:59:53+00:00","UserScreenname":"CodeInsideBlog","Text":"HowTo: Write to Azure Blob Storage http://t.co/67r6XsuWzZ #Azure","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null},{"Id":"631389556361830401","CreatedAt":"2015-08-12T08:59:35+00:00","UserScreenname":"CodeInsideBlog","Text":"Semantic Versioning in a nutshell http://t.co/Bw28QJLhol #SemVer","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":0,"FavoriteCount":0,"RawContent":null}]},"TwitterUserRobert":{"ResultType":"TwitterUser","Users":[{"Id":"14109602","CreatedAt":"2008-03-09T21:36:40+00:00","Name":"Robert Muehsig","Url":null,"FollowersCount":1428,"Description":"Developer @OneOffixx, Microsoft MVP, Nerd. ¯\\_(ツ)_/¯","RawContent":null}]},"TwitterUserOliver":{"ResultType":"TwitterUser","Users":[{"Id":"19961277","CreatedAt":"2009-02-03T09:07:08+00:00","Name":"Oliver Guhr","Url":"https://t.co/t5FGk7tjMD","FollowersCount":787,"Description":"Machine learning, human-robot interaction and some science. Talks with robots 🤖👨‍💻","RawContent":null}]}},"RunOn":"2022-01-24T01:10:02.0811508Z","RunDurationInMilliseconds":1879}